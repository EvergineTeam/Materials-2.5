// Copyright © 2018 Wave Engine S.L. All rights reserved. Use is subject to license terms.

#region Using Statements
using System;
using System.Linq;
using WaveEngine.Common.Graphics;
using WaveEngine.Common.Math;
using WaveEngine.Common.Graphics.VertexFormats;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using WaveEngine.Common.Attributes;
using WaveEngine.Framework.Graphics;
#endregion

namespace WaveEngine.Materials
{
    /// <summary>
    /// Light PrePass Material
    /// <example>
    /// #### Recipes and samples
    /// <list type="bullet">
    ///    <item>
    ///        <description>[Materials samples](https://github.com/WaveEngine/Samples/tree/master/Materials)</description>
    ///    </item>
    /// </list>
    /// </example>
    /// </summary>
    public partial class StandardMaterial : DeferredMaterial
    {
        #region Techniques

        /// <summary>
        /// The techniques
        /// </summary>
        private static ShaderTechnique[] techniques =
        {
            // Forward pass
            new ShaderTechnique("Simple",   "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat),

            new ShaderTechnique("LIT", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT" }, new string[] { "LIT" }),
            new ShaderTechnique("LITIBL", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "IBL" }, new string[] { "LIT", "IBL" }),
            new ShaderTechnique("LITIBLENV", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "IBL", "ENV" }, new string[] { "LIT", "IBL", "ENV" }),
            new ShaderTechnique("LITIBLENVEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS" }, new string[] { "LIT", "IBL", "ENV", "EMIS" }),
            new ShaderTechnique("LITIBLENVEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLENVEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLENVEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLENVEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLENVEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC" }),
            new ShaderTechnique("LITIBLENVEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS" }, new string[] { "LIT", "IBL", "ENV", "EMIS", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF" }, new string[] { "LIT", "IBL", "ENV", "DIFF" }),
            new ShaderTechnique("LITIBLENVDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLENVDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLENVDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLENVDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLENVDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC" }),
            new ShaderTechnique("LITIBLENVDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF" }, new string[] { "LIT", "IBL", "ENV", "DIFF", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLENVDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLENVDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLENVDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLENVDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLENVDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLENVDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLENVDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLENVDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLENVSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "SPEC" }),
            new ShaderTechnique("LITIBLENVSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "IBL", "ENV", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "IBL", "ENV", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVATEST", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "IBL", "ENV" }, new string[] { "LIT", "IBL", "ENV", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRES", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "IBL", "ENV" }, new string[] { "LIT", "IBL", "ENV", "FRES" }),
            new ShaderTechnique("LITIBLENVFRESEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DIFF" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "EMIS" }, new string[] { "LIT", "IBL", "ENV", "FRES", "EMIS", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DIFF" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DIFF", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLENVFRESDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLENVFRESDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLENVFRESDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLENVFRESDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "DUAL" }, new string[] { "LIT", "IBL", "ENV", "FRES", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "SPEC" }),
            new ShaderTechnique("LITIBLENVFRESSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "ENV", "SPEC" }, new string[] { "LIT", "IBL", "ENV", "FRES", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "IBL", "ENV", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "VCOLOR" }),
            new ShaderTechnique("LITIBLENVFRESVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "IBL", "ENV", "VCOLOR" }, new string[] { "LIT", "IBL", "ENV", "FRES", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLENVFRESATEST", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "IBL", "ENV" }, new string[] { "LIT", "IBL", "ENV", "FRES", "ATEST" }),
            new ShaderTechnique("LITIBLEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS" }, new string[] { "LIT", "IBL", "EMIS" }),
            new ShaderTechnique("LITIBLEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF" }, new string[] { "LIT", "IBL", "EMIS", "DIFF" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DIFF" }, new string[] { "LIT", "IBL", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "DUAL" }, new string[] { "LIT", "IBL", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "SPEC" }),
            new ShaderTechnique("LITIBLEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "SPEC" }, new string[] { "LIT", "IBL", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "VCOLOR" }),
            new ShaderTechnique("LITIBLEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS", "VCOLOR" }, new string[] { "LIT", "IBL", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "EMIS" }, new string[] { "LIT", "IBL", "EMIS", "ATEST" }),
            new ShaderTechnique("LITIBLDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF" }, new string[] { "LIT", "IBL", "DIFF" }),
            new ShaderTechnique("LITIBLDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "DUAL" }, new string[] { "LIT", "IBL", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "SPEC" }),
            new ShaderTechnique("LITIBLDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "SPEC" }, new string[] { "LIT", "IBL", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITIBLDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF", "VCOLOR" }, new string[] { "LIT", "IBL", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "DIFF" }, new string[] { "LIT", "IBL", "DIFF", "ATEST" }),
            new ShaderTechnique("LITIBLDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL" }, new string[] { "LIT", "IBL", "DUAL", "LMAP" }),
            new ShaderTechnique("LITIBLDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITIBLDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITIBLDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL" }, new string[] { "LIT", "IBL", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITIBLDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL" }, new string[] { "LIT", "IBL", "DUAL", "MUL" }),
            new ShaderTechnique("LITIBLDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITIBLDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITIBLDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL" }, new string[] { "LIT", "IBL", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITIBLDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL" }, new string[] { "LIT", "IBL", "DUAL", "ADD" }),
            new ShaderTechnique("LITIBLDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITIBLDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITIBLDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL" }, new string[] { "LIT", "IBL", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITIBLDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL" }, new string[] { "LIT", "IBL", "DUAL", "MSK" }),
            new ShaderTechnique("LITIBLDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITIBLDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "SPEC" }, new string[] { "LIT", "IBL", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITIBLDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL", "VCOLOR" }, new string[] { "LIT", "IBL", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "IBL", "DUAL" }, new string[] { "LIT", "IBL", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITIBLSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "SPEC" }, new string[] { "LIT", "IBL", "SPEC" }),
            new ShaderTechnique("LITIBLSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITIBLSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "IBL", "SPEC", "VCOLOR" }, new string[] { "LIT", "IBL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "IBL", "SPEC" }, new string[] { "LIT", "IBL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITIBLVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "IBL", "VCOLOR" }, new string[] { "LIT", "IBL", "VCOLOR" }),
            new ShaderTechnique("LITIBLVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "IBL", "VCOLOR" }, new string[] { "LIT", "IBL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITIBLATEST", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "IBL" }, new string[] { "LIT", "IBL", "ATEST" }),
            new ShaderTechnique("LITENV", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "ENV" }, new string[] { "LIT", "ENV" }),
            new ShaderTechnique("LITENVEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS" }, new string[] { "LIT", "ENV", "EMIS" }),
            new ShaderTechnique("LITENVEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF" }, new string[] { "LIT", "ENV", "EMIS", "DIFF" }),
            new ShaderTechnique("LITENVEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITENVEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITENVEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITENVEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITENVEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("LITENVEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF" }, new string[] { "LIT", "ENV", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("LITENVEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITENVEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("LITENVEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITENVEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("LITENVEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITENVEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("LITENVEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITENVEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITENVEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "SPEC" }),
            new ShaderTechnique("LITENVEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "SPEC" }, new string[] { "LIT", "ENV", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "VCOLOR" }),
            new ShaderTechnique("LITENVEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "VCOLOR" }, new string[] { "LIT", "ENV", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS" }, new string[] { "LIT", "ENV", "EMIS", "ATEST" }),
            new ShaderTechnique("LITENVDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF" }, new string[] { "LIT", "ENV", "DIFF" }),
            new ShaderTechnique("LITENVDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITENVDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITENVDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITENVDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITENVDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITENVDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITENVDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITENVDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITENVDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITENVDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "SPEC" }),
            new ShaderTechnique("LITENVDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "SPEC" }, new string[] { "LIT", "ENV", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITENVDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "VCOLOR" }, new string[] { "LIT", "ENV", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF" }, new string[] { "LIT", "ENV", "DIFF", "ATEST" }),
            new ShaderTechnique("LITENVDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "DUAL", "LMAP" }),
            new ShaderTechnique("LITENVDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITENVDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITENVDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITENVDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "DUAL", "MUL" }),
            new ShaderTechnique("LITENVDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITENVDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITENVDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITENVDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "DUAL", "ADD" }),
            new ShaderTechnique("LITENVDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITENVDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITENVDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITENVDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "DUAL", "MSK" }),
            new ShaderTechnique("LITENVDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITENVDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITENVDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITENVSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "SPEC" }, new string[] { "LIT", "ENV", "SPEC" }),
            new ShaderTechnique("LITENVSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "SPEC" }, new string[] { "LIT", "ENV", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "ENV", "VCOLOR" }, new string[] { "LIT", "ENV", "VCOLOR" }),
            new ShaderTechnique("LITENVVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "ENV", "VCOLOR" }, new string[] { "LIT", "ENV", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVATEST", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "ENV" }, new string[] { "LIT", "ENV", "ATEST" }),
            new ShaderTechnique("LITENVFRES", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "ENV" }, new string[] { "LIT", "ENV", "FRES" }),
            new ShaderTechnique("LITENVFRESEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS" }, new string[] { "LIT", "ENV", "FRES", "EMIS" }),
            new ShaderTechnique("LITENVFRESEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DIFF" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("LITENVFRESEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("LITENVFRESEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("LITENVFRESEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("LITENVFRESEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "SPEC" }),
            new ShaderTechnique("LITENVFRESEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "EMIS" }, new string[] { "LIT", "ENV", "FRES", "EMIS", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF" }, new string[] { "LIT", "ENV", "FRES", "DIFF" }),
            new ShaderTechnique("LITENVFRESDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITENVFRESDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITENVFRESDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITENVFRESDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITENVFRESDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "SPEC" }),
            new ShaderTechnique("LITENVFRESDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "DIFF" }, new string[] { "LIT", "ENV", "FRES", "DIFF", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "LMAP" }),
            new ShaderTechnique("LITENVFRESDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITENVFRESDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MUL" }),
            new ShaderTechnique("LITENVFRESDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITENVFRESDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "ADD" }),
            new ShaderTechnique("LITENVFRESDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITENVFRESDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MSK" }),
            new ShaderTechnique("LITENVFRESDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITENVFRESDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "ENV", "DUAL" }, new string[] { "LIT", "ENV", "FRES", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITENVFRESSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "SPEC" }),
            new ShaderTechnique("LITENVFRESSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "ENV", "SPEC", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "ENV", "SPEC" }, new string[] { "LIT", "ENV", "FRES", "SPEC", "ATEST" }),
            new ShaderTechnique("LITENVFRESVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "ENV", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "VCOLOR" }),
            new ShaderTechnique("LITENVFRESVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "ENV", "VCOLOR" }, new string[] { "LIT", "ENV", "FRES", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITENVFRESATEST", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT", "ENV" }, new string[] { "LIT", "ENV", "FRES", "ATEST" }),
            new ShaderTechnique("LITEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "EMIS" }, new string[] { "LIT", "EMIS" }),
            new ShaderTechnique("LITEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF" }, new string[] { "LIT", "EMIS", "DIFF" }),
            new ShaderTechnique("LITEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "DUAL" }, new string[] { "LIT", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("LITEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "SPEC" }, new string[] { "LIT", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF", "VCOLOR" }, new string[] { "LIT", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "EMIS", "DIFF" }, new string[] { "LIT", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("LITEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL" }, new string[] { "LIT", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("LITEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL" }, new string[] { "LIT", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL" }, new string[] { "LIT", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("LITEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL" }, new string[] { "LIT", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL" }, new string[] { "LIT", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("LITEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL" }, new string[] { "LIT", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL" }, new string[] { "LIT", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("LITEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "SPEC" }, new string[] { "LIT", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL", "VCOLOR" }, new string[] { "LIT", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "EMIS", "DUAL" }, new string[] { "LIT", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "EMIS", "SPEC" }, new string[] { "LIT", "EMIS", "SPEC" }),
            new ShaderTechnique("LITEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "EMIS", "SPEC", "VCOLOR" }, new string[] { "LIT", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "EMIS", "SPEC" }, new string[] { "LIT", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("LITEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "EMIS", "VCOLOR" }, new string[] { "LIT", "EMIS", "VCOLOR" }),
            new ShaderTechnique("LITEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "EMIS", "VCOLOR" }, new string[] { "LIT", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "EMIS" }, new string[] { "LIT", "EMIS", "ATEST" }),
            new ShaderTechnique("LITDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "DIFF" }, new string[] { "LIT", "DIFF" }),
            new ShaderTechnique("LITDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL" }, new string[] { "LIT", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("LITDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL" }, new string[] { "LIT", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL" }, new string[] { "LIT", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("LITDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL" }, new string[] { "LIT", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL" }, new string[] { "LIT", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("LITDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL" }, new string[] { "LIT", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL" }, new string[] { "LIT", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("LITDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "SPEC" }, new string[] { "LIT", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL", "VCOLOR" }, new string[] { "LIT", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DIFF", "DUAL" }, new string[] { "LIT", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "DIFF", "SPEC" }, new string[] { "LIT", "DIFF", "SPEC" }),
            new ShaderTechnique("LITDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "DIFF", "SPEC", "VCOLOR" }, new string[] { "LIT", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "DIFF", "SPEC" }, new string[] { "LIT", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "DIFF", "VCOLOR" }, new string[] { "LIT", "DIFF", "VCOLOR" }),
            new ShaderTechnique("LITDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "DIFF", "VCOLOR" }, new string[] { "LIT", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "DIFF" }, new string[] { "LIT", "DIFF", "ATEST" }),
            new ShaderTechnique("LITDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL" }, new string[] { "LIT", "DUAL", "LMAP" }),
            new ShaderTechnique("LITDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC" }, new string[] { "LIT", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("LITDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC" }, new string[] { "LIT", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "VCOLOR" }, new string[] { "LIT", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("LITDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "VCOLOR" }, new string[] { "LIT", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL" }, new string[] { "LIT", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("LITDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL" }, new string[] { "LIT", "DUAL", "MUL" }),
            new ShaderTechnique("LITDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC" }, new string[] { "LIT", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("LITDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC" }, new string[] { "LIT", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "VCOLOR" }, new string[] { "LIT", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("LITDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "VCOLOR" }, new string[] { "LIT", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL" }, new string[] { "LIT", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("LITDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL" }, new string[] { "LIT", "DUAL", "ADD" }),
            new ShaderTechnique("LITDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC" }, new string[] { "LIT", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("LITDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC" }, new string[] { "LIT", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "VCOLOR" }, new string[] { "LIT", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("LITDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "VCOLOR" }, new string[] { "LIT", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL" }, new string[] { "LIT", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("LITDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL" }, new string[] { "LIT", "DUAL", "MSK" }),
            new ShaderTechnique("LITDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC" }, new string[] { "LIT", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("LITDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC", "VCOLOR" }, new string[] { "LIT", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "SPEC" }, new string[] { "LIT", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("LITDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "VCOLOR" }, new string[] { "LIT", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("LITDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "LIT", "DUAL", "VCOLOR" }, new string[] { "LIT", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "LIT", "DUAL" }, new string[] { "LIT", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("LITSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "SPEC" }, new string[] { "LIT", "SPEC" }),
            new ShaderTechnique("LITSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "SPEC", "VCOLOR" }, new string[] { "LIT", "SPEC", "VCOLOR" }),
            new ShaderTechnique("LITSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "LIT", "SPEC", "VCOLOR" }, new string[] { "LIT", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "LIT", "SPEC" }, new string[] { "LIT", "SPEC", "ATEST" }),
            new ShaderTechnique("LITVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "VCOLOR" }, new string[] { "LIT", "VCOLOR" }),
            new ShaderTechnique("LITVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "LIT", "VCOLOR" }, new string[] { "LIT", "VCOLOR", "ATEST" }),
            new ShaderTechnique("LITATEST", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, new string[] { "LIT" }, new string[] { "LIT", "ATEST" }),
            new ShaderTechnique("IBL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "IBL" }, new string[] { "IBL" }),
            new ShaderTechnique("IBLENV", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "IBL", "ENV" }, new string[] { "IBL", "ENV" }),
            new ShaderTechnique("IBLENVEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS" }, new string[] { "IBL", "ENV", "EMIS" }),
            new ShaderTechnique("IBLENVEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF" }, new string[] { "IBL", "ENV", "EMIS", "DIFF" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF" }, new string[] { "IBL", "ENV", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLENVEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("IBLENVEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("IBLENVEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("IBLENVEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLENVEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLENVEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "SPEC" }),
            new ShaderTechnique("IBLENVEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "SPEC" }, new string[] { "IBL", "ENV", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "VCOLOR" }),
            new ShaderTechnique("IBLENVEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "VCOLOR" }, new string[] { "IBL", "ENV", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS" }, new string[] { "IBL", "ENV", "EMIS", "ATEST" }),
            new ShaderTechnique("IBLENVDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF" }, new string[] { "IBL", "ENV", "DIFF" }),
            new ShaderTechnique("IBLENVDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLENVDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLENVDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("IBLENVDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLENVDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("IBLENVDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLENVDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("IBLENVDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLENVDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "SPEC" }),
            new ShaderTechnique("IBLENVDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "SPEC" }, new string[] { "IBL", "ENV", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "VCOLOR" }),
            new ShaderTechnique("IBLENVDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "VCOLOR" }, new string[] { "IBL", "ENV", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF" }, new string[] { "IBL", "ENV", "DIFF", "ATEST" }),
            new ShaderTechnique("IBLENVDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLENVDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLENVDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLENVDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLENVDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "DUAL", "MUL" }),
            new ShaderTechnique("IBLENVDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLENVDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLENVDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLENVDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "DUAL", "ADD" }),
            new ShaderTechnique("IBLENVDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLENVDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLENVDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLENVDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "DUAL", "MSK" }),
            new ShaderTechnique("IBLENVDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLENVDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLENVDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLENVSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "SPEC" }, new string[] { "IBL", "ENV", "SPEC" }),
            new ShaderTechnique("IBLENVSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "SPEC" }, new string[] { "IBL", "ENV", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "IBL", "ENV", "VCOLOR" }, new string[] { "IBL", "ENV", "VCOLOR" }),
            new ShaderTechnique("IBLENVVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "IBL", "ENV", "VCOLOR" }, new string[] { "IBL", "ENV", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "IBL", "ENV" }, new string[] { "IBL", "ENV", "ATEST" }),
            new ShaderTechnique("IBLENVFRES", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "IBL", "ENV" }, new string[] { "IBL", "ENV", "FRES" }),
            new ShaderTechnique("IBLENVFRESEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS" }, new string[] { "IBL", "ENV", "FRES", "EMIS" }),
            new ShaderTechnique("IBLENVFRESEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DIFF" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLENVFRESEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("IBLENVFRESEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "SPEC" }),
            new ShaderTechnique("IBLENVFRESEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "EMIS" }, new string[] { "IBL", "ENV", "FRES", "EMIS", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF" }, new string[] { "IBL", "ENV", "FRES", "DIFF" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "DIFF" }, new string[] { "IBL", "ENV", "FRES", "DIFF", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLENVFRESDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MUL" }),
            new ShaderTechnique("IBLENVFRESDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "ADD" }),
            new ShaderTechnique("IBLENVFRESDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MSK" }),
            new ShaderTechnique("IBLENVFRESDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLENVFRESDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "ENV", "DUAL" }, new string[] { "IBL", "ENV", "FRES", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLENVFRESSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "SPEC" }),
            new ShaderTechnique("IBLENVFRESSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "ENV", "SPEC", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "ENV", "SPEC" }, new string[] { "IBL", "ENV", "FRES", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLENVFRESVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "IBL", "ENV", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "VCOLOR" }),
            new ShaderTechnique("IBLENVFRESVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "IBL", "ENV", "VCOLOR" }, new string[] { "IBL", "ENV", "FRES", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLENVFRESATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "IBL", "ENV" }, new string[] { "IBL", "ENV", "FRES", "ATEST" }),
            new ShaderTechnique("IBLEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "EMIS" }, new string[] { "IBL", "EMIS" }),
            new ShaderTechnique("IBLEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF" }, new string[] { "IBL", "EMIS", "DIFF" }),
            new ShaderTechnique("IBLEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("IBLEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("IBLEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("IBLEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "DUAL" }, new string[] { "IBL", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("IBLEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "SPEC" }, new string[] { "IBL", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF", "VCOLOR" }, new string[] { "IBL", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "EMIS", "DIFF" }, new string[] { "IBL", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL" }, new string[] { "IBL", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL" }, new string[] { "IBL", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL" }, new string[] { "IBL", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("IBLEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL" }, new string[] { "IBL", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL" }, new string[] { "IBL", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("IBLEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL" }, new string[] { "IBL", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL" }, new string[] { "IBL", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("IBLEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "SPEC" }, new string[] { "IBL", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL", "VCOLOR" }, new string[] { "IBL", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "EMIS", "DUAL" }, new string[] { "IBL", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "EMIS", "SPEC" }, new string[] { "IBL", "EMIS", "SPEC" }),
            new ShaderTechnique("IBLEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "EMIS", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "EMIS", "SPEC", "VCOLOR" }, new string[] { "IBL", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "EMIS", "SPEC" }, new string[] { "IBL", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "EMIS", "VCOLOR" }, new string[] { "IBL", "EMIS", "VCOLOR" }),
            new ShaderTechnique("IBLEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "EMIS", "VCOLOR" }, new string[] { "IBL", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "EMIS" }, new string[] { "IBL", "EMIS", "ATEST" }),
            new ShaderTechnique("IBLDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "DIFF" }, new string[] { "IBL", "DIFF" }),
            new ShaderTechnique("IBLDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL" }, new string[] { "IBL", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL" }, new string[] { "IBL", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL" }, new string[] { "IBL", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("IBLDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL" }, new string[] { "IBL", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL" }, new string[] { "IBL", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("IBLDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL" }, new string[] { "IBL", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL" }, new string[] { "IBL", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("IBLDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "SPEC" }, new string[] { "IBL", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL", "VCOLOR" }, new string[] { "IBL", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DIFF", "DUAL" }, new string[] { "IBL", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "DIFF", "SPEC" }, new string[] { "IBL", "DIFF", "SPEC" }),
            new ShaderTechnique("IBLDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "DIFF", "SPEC", "VCOLOR" }, new string[] { "IBL", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "DIFF", "SPEC" }, new string[] { "IBL", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "DIFF", "VCOLOR" }, new string[] { "IBL", "DIFF", "VCOLOR" }),
            new ShaderTechnique("IBLDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "DIFF", "VCOLOR" }, new string[] { "IBL", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "DIFF" }, new string[] { "IBL", "DIFF", "ATEST" }),
            new ShaderTechnique("IBLDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL" }, new string[] { "IBL", "DUAL", "LMAP" }),
            new ShaderTechnique("IBLDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC" }, new string[] { "IBL", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("IBLDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC" }, new string[] { "IBL", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "VCOLOR" }, new string[] { "IBL", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("IBLDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "VCOLOR" }, new string[] { "IBL", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL" }, new string[] { "IBL", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("IBLDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL" }, new string[] { "IBL", "DUAL", "MUL" }),
            new ShaderTechnique("IBLDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC" }, new string[] { "IBL", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("IBLDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC" }, new string[] { "IBL", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "VCOLOR" }, new string[] { "IBL", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("IBLDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "VCOLOR" }, new string[] { "IBL", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL" }, new string[] { "IBL", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("IBLDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL" }, new string[] { "IBL", "DUAL", "ADD" }),
            new ShaderTechnique("IBLDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC" }, new string[] { "IBL", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("IBLDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC" }, new string[] { "IBL", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "VCOLOR" }, new string[] { "IBL", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("IBLDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "VCOLOR" }, new string[] { "IBL", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL" }, new string[] { "IBL", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("IBLDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL" }, new string[] { "IBL", "DUAL", "MSK" }),
            new ShaderTechnique("IBLDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC" }, new string[] { "IBL", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("IBLDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC", "VCOLOR" }, new string[] { "IBL", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "SPEC" }, new string[] { "IBL", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "VCOLOR" }, new string[] { "IBL", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("IBLDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "IBL", "DUAL", "VCOLOR" }, new string[] { "IBL", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "IBL", "DUAL" }, new string[] { "IBL", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("IBLSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "SPEC" }, new string[] { "IBL", "SPEC" }),
            new ShaderTechnique("IBLSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "SPEC", "VCOLOR" }, new string[] { "IBL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("IBLSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "IBL", "SPEC", "VCOLOR" }, new string[] { "IBL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "IBL", "SPEC" }, new string[] { "IBL", "SPEC", "ATEST" }),
            new ShaderTechnique("IBLVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "IBL", "VCOLOR" }, new string[] { "IBL", "VCOLOR" }),
            new ShaderTechnique("IBLVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "IBL", "VCOLOR" }, new string[] { "IBL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("IBLATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "IBL" }, new string[] { "IBL", "ATEST" }),
            new ShaderTechnique("ENV", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "ENV" }, new string[] { "ENV" }),
            new ShaderTechnique("ENVEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS" }, new string[] { "ENV", "EMIS" }),
            new ShaderTechnique("ENVEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF" }, new string[] { "ENV", "EMIS", "DIFF" }),
            new ShaderTechnique("ENVEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("ENVEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("ENVEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("ENVEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("ENVEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("ENVEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("ENVEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("ENVEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("ENVEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("ENVEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "ENV", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "ENV", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF" }, new string[] { "ENV", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("ENVEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("ENVEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("ENVEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("ENVEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("ENVEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("ENVEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("ENVEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("ENVEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("ENVEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("ENVEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "SPEC" }, new string[] { "ENV", "EMIS", "SPEC" }),
            new ShaderTechnique("ENVEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "ENV", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "SPEC" }, new string[] { "ENV", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "VCOLOR" }, new string[] { "ENV", "EMIS", "VCOLOR" }),
            new ShaderTechnique("ENVEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "VCOLOR" }, new string[] { "ENV", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS" }, new string[] { "ENV", "EMIS", "ATEST" }),
            new ShaderTechnique("ENVDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "DIFF" }, new string[] { "ENV", "DIFF" }),
            new ShaderTechnique("ENVDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("ENVDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("ENVDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("ENVDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("ENVDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("ENVDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("ENVDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("ENVDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("ENVDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("ENVDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "DIFF", "SPEC" }, new string[] { "ENV", "DIFF", "SPEC" }),
            new ShaderTechnique("ENVDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "ENV", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "DIFF", "SPEC" }, new string[] { "ENV", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "DIFF", "VCOLOR" }, new string[] { "ENV", "DIFF", "VCOLOR" }),
            new ShaderTechnique("ENVDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "DIFF", "VCOLOR" }, new string[] { "ENV", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "DIFF" }, new string[] { "ENV", "DIFF", "ATEST" }),
            new ShaderTechnique("ENVDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "DUAL", "LMAP" }),
            new ShaderTechnique("ENVDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("ENVDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("ENVDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("ENVDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "DUAL", "MUL" }),
            new ShaderTechnique("ENVDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("ENVDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("ENVDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("ENVDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "DUAL", "ADD" }),
            new ShaderTechnique("ENVDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("ENVDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("ENVDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("ENVDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "DUAL", "MSK" }),
            new ShaderTechnique("ENVDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("ENVDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("ENVDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("ENVSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "SPEC" }, new string[] { "ENV", "SPEC" }),
            new ShaderTechnique("ENVSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "SPEC", "VCOLOR" }, new string[] { "ENV", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "SPEC", "VCOLOR" }, new string[] { "ENV", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "SPEC" }, new string[] { "ENV", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "ENV", "VCOLOR" }, new string[] { "ENV", "VCOLOR" }),
            new ShaderTechnique("ENVVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "ENV", "VCOLOR" }, new string[] { "ENV", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "ENV" }, new string[] { "ENV", "ATEST" }),
            new ShaderTechnique("ENVFRES", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "ENV" }, new string[] { "ENV", "FRES" }),
            new ShaderTechnique("ENVFRESEMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS" }, new string[] { "ENV", "FRES", "EMIS" }),
            new ShaderTechnique("ENVFRESEMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF" }, new string[] { "ENV", "FRES", "EMIS", "DIFF" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "DIFF" }, new string[] { "ENV", "FRES", "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("ENVFRESEMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("ENVFRESEMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("ENVFRESEMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("ENVFRESEMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "EMIS", "DUAL" }, new string[] { "ENV", "FRES", "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "SPEC" }),
            new ShaderTechnique("ENVFRESEMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS", "SPEC" }, new string[] { "ENV", "FRES", "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "VCOLOR" }),
            new ShaderTechnique("ENVFRESEMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "EMIS", "VCOLOR" }, new string[] { "ENV", "FRES", "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESEMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "EMIS" }, new string[] { "ENV", "FRES", "EMIS", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "DIFF" }, new string[] { "ENV", "FRES", "DIFF" }),
            new ShaderTechnique("ENVFRESDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("ENVFRESDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("ENVFRESDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("ENVFRESDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("ENVFRESDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("ENVFRESDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("ENVFRESDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("ENVFRESDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("ENVFRESDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DIFF", "DUAL" }, new string[] { "ENV", "FRES", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "DIFF", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "SPEC" }),
            new ShaderTechnique("ENVFRESDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "DIFF", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "DIFF", "SPEC" }, new string[] { "ENV", "FRES", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "DIFF", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "DIFF", "VCOLOR" }, new string[] { "ENV", "FRES", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "DIFF" }, new string[] { "ENV", "FRES", "DIFF", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "FRES", "DUAL", "LMAP" }),
            new ShaderTechnique("ENVFRESDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("ENVFRESDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "FRES", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "FRES", "DUAL", "MUL" }),
            new ShaderTechnique("ENVFRESDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("ENVFRESDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "FRES", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "FRES", "DUAL", "ADD" }),
            new ShaderTechnique("ENVFRESDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("ENVFRESDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "FRES", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "FRES", "DUAL", "MSK" }),
            new ShaderTechnique("ENVFRESDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("ENVFRESDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "SPEC" }, new string[] { "ENV", "FRES", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("ENVFRESDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorDualTexture.VertexFormat, new string[] { "ENV", "DUAL", "VCOLOR" }, new string[] { "ENV", "FRES", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalDualTexture.VertexFormat, new string[] { "ENV", "DUAL" }, new string[] { "ENV", "FRES", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("ENVFRESSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "SPEC" }, new string[] { "ENV", "FRES", "SPEC" }),
            new ShaderTechnique("ENVFRESSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "SPEC", "VCOLOR" }),
            new ShaderTechnique("ENVFRESSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColorTexture.VertexFormat, new string[] { "ENV", "SPEC", "VCOLOR" }, new string[] { "ENV", "FRES", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalTexture.VertexFormat, new string[] { "ENV", "SPEC" }, new string[] { "ENV", "FRES", "SPEC", "ATEST" }),
            new ShaderTechnique("ENVFRESVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "ENV", "VCOLOR" }, new string[] { "ENV", "FRES", "VCOLOR" }),
            new ShaderTechnique("ENVFRESVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormalColor.VertexFormat, new string[] { "ENV", "VCOLOR" }, new string[] { "ENV", "FRES", "VCOLOR", "ATEST" }),
            new ShaderTechnique("ENVFRESATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionNormal.VertexFormat, new string[] { "ENV" }, new string[] { "ENV", "FRES", "ATEST" }),
            new ShaderTechnique("EMIS", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "EMIS" }, new string[] { "EMIS" }),
            new ShaderTechnique("EMISDIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "EMIS", "DIFF" }, new string[] { "EMIS", "DIFF" }),
            new ShaderTechnique("EMISDIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL" }, new string[] { "EMIS", "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("EMISDIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "EMIS", "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("EMISDIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "EMIS", "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL" }, new string[] { "EMIS", "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL" }, new string[] { "EMIS", "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("EMISDIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "EMIS", "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("EMISDIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "EMIS", "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL" }, new string[] { "EMIS", "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL" }, new string[] { "EMIS", "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("EMISDIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "EMIS", "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("EMISDIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "EMIS", "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL" }, new string[] { "EMIS", "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL" }, new string[] { "EMIS", "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("EMISDIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "EMIS", "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("EMISDIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "SPEC" }, new string[] { "EMIS", "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DIFF", "DUAL" }, new string[] { "EMIS", "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("EMISDIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "EMIS", "DIFF", "SPEC" }, new string[] { "EMIS", "DIFF", "SPEC" }),
            new ShaderTechnique("EMISDIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "EMIS", "DIFF", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "EMIS", "DIFF", "SPEC" }, new string[] { "EMIS", "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "EMIS", "DIFF", "VCOLOR" }, new string[] { "EMIS", "DIFF", "VCOLOR" }),
            new ShaderTechnique("EMISDIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "EMIS", "DIFF", "VCOLOR" }, new string[] { "EMIS", "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "EMIS", "DIFF" }, new string[] { "EMIS", "DIFF", "ATEST" }),
            new ShaderTechnique("EMISDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL" }, new string[] { "EMIS", "DUAL", "LMAP" }),
            new ShaderTechnique("EMISDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC" }, new string[] { "EMIS", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("EMISDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC" }, new string[] { "EMIS", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("EMISDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL" }, new string[] { "EMIS", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("EMISDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL" }, new string[] { "EMIS", "DUAL", "MUL" }),
            new ShaderTechnique("EMISDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC" }, new string[] { "EMIS", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("EMISDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC" }, new string[] { "EMIS", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("EMISDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL" }, new string[] { "EMIS", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("EMISDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL" }, new string[] { "EMIS", "DUAL", "ADD" }),
            new ShaderTechnique("EMISDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC" }, new string[] { "EMIS", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("EMISDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC" }, new string[] { "EMIS", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("EMISDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL" }, new string[] { "EMIS", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("EMISDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL" }, new string[] { "EMIS", "DUAL", "MSK" }),
            new ShaderTechnique("EMISDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC" }, new string[] { "EMIS", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("EMISDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC", "VCOLOR" }, new string[] { "EMIS", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "SPEC" }, new string[] { "EMIS", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("EMISDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "EMIS", "DUAL", "VCOLOR" }, new string[] { "EMIS", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "EMIS", "DUAL" }, new string[] { "EMIS", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("EMISSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "EMIS", "SPEC" }, new string[] { "EMIS", "SPEC" }),
            new ShaderTechnique("EMISSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "EMIS", "SPEC", "VCOLOR" }, new string[] { "EMIS", "SPEC", "VCOLOR" }),
            new ShaderTechnique("EMISSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "EMIS", "SPEC", "VCOLOR" }, new string[] { "EMIS", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "EMIS", "SPEC" }, new string[] { "EMIS", "SPEC", "ATEST" }),
            new ShaderTechnique("EMISVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "EMIS", "VCOLOR" }, new string[] { "EMIS", "VCOLOR" }),
            new ShaderTechnique("EMISVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "EMIS", "VCOLOR" }, new string[] { "EMIS", "VCOLOR", "ATEST" }),
            new ShaderTechnique("EMISATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "EMIS" }, new string[] { "EMIS", "ATEST" }),
            new ShaderTechnique("DIFF", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "DIFF" }, new string[] { "DIFF" }),
            new ShaderTechnique("DIFFDUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL" }, new string[] { "DIFF", "DUAL", "LMAP" }),
            new ShaderTechnique("DIFFDUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC" }, new string[] { "DIFF", "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("DIFFDUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DIFFDUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "DIFF", "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFDUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC" }, new string[] { "DIFF", "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("DIFFDUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "VCOLOR" }, new string[] { "DIFF", "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("DIFFDUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "VCOLOR" }, new string[] { "DIFF", "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFDUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL" }, new string[] { "DIFF", "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("DIFFDUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL" }, new string[] { "DIFF", "DUAL", "MUL" }),
            new ShaderTechnique("DIFFDUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC" }, new string[] { "DIFF", "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("DIFFDUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DIFFDUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "DIFF", "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFDUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC" }, new string[] { "DIFF", "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("DIFFDUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "VCOLOR" }, new string[] { "DIFF", "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("DIFFDUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "VCOLOR" }, new string[] { "DIFF", "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFDUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL" }, new string[] { "DIFF", "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("DIFFDUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL" }, new string[] { "DIFF", "DUAL", "ADD" }),
            new ShaderTechnique("DIFFDUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC" }, new string[] { "DIFF", "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("DIFFDUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DIFFDUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "DIFF", "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFDUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC" }, new string[] { "DIFF", "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("DIFFDUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "VCOLOR" }, new string[] { "DIFF", "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("DIFFDUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "VCOLOR" }, new string[] { "DIFF", "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFDUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL" }, new string[] { "DIFF", "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("DIFFDUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL" }, new string[] { "DIFF", "DUAL", "MSK" }),
            new ShaderTechnique("DIFFDUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC" }, new string[] { "DIFF", "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("DIFFDUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DIFFDUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC", "VCOLOR" }, new string[] { "DIFF", "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFDUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "SPEC" }, new string[] { "DIFF", "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("DIFFDUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "VCOLOR" }, new string[] { "DIFF", "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("DIFFDUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DIFF", "DUAL", "VCOLOR" }, new string[] { "DIFF", "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFDUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DIFF", "DUAL" }, new string[] { "DIFF", "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("DIFFSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "DIFF", "SPEC" }, new string[] { "DIFF", "SPEC" }),
            new ShaderTechnique("DIFFSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "DIFF", "SPEC", "VCOLOR" }, new string[] { "DIFF", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DIFFSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "DIFF", "SPEC", "VCOLOR" }, new string[] { "DIFF", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "DIFF", "SPEC" }, new string[] { "DIFF", "SPEC", "ATEST" }),
            new ShaderTechnique("DIFFVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "DIFF", "VCOLOR" }, new string[] { "DIFF", "VCOLOR" }),
            new ShaderTechnique("DIFFVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "DIFF", "VCOLOR" }, new string[] { "DIFF", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DIFFATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "DIFF" }, new string[] { "DIFF", "ATEST" }),
            new ShaderTechnique("DUALLMAP", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL" }, new string[] { "DUAL", "LMAP" }),
            new ShaderTechnique("DUALLMAPSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL", "SPEC" }, new string[] { "DUAL", "LMAP", "SPEC" }),
            new ShaderTechnique("DUALLMAPSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "SPEC", "VCOLOR" }, new string[] { "DUAL", "LMAP", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DUALLMAPSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "SPEC", "VCOLOR" }, new string[] { "DUAL", "LMAP", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DUALLMAPSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL", "SPEC" }, new string[] { "DUAL", "LMAP", "SPEC", "ATEST" }),
            new ShaderTechnique("DUALLMAPVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "VCOLOR" }, new string[] { "DUAL", "LMAP", "VCOLOR" }),
            new ShaderTechnique("DUALLMAPVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "VCOLOR" }, new string[] { "DUAL", "LMAP", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DUALLMAPATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL" }, new string[] { "DUAL", "LMAP", "ATEST" }),
            new ShaderTechnique("DUALMUL", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL" }, new string[] { "DUAL", "MUL" }),
            new ShaderTechnique("DUALMULSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL", "SPEC" }, new string[] { "DUAL", "MUL", "SPEC" }),
            new ShaderTechnique("DUALMULSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "SPEC", "VCOLOR" }, new string[] { "DUAL", "MUL", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DUALMULSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "SPEC", "VCOLOR" }, new string[] { "DUAL", "MUL", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DUALMULSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL", "SPEC" }, new string[] { "DUAL", "MUL", "SPEC", "ATEST" }),
            new ShaderTechnique("DUALMULVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "VCOLOR" }, new string[] { "DUAL", "MUL", "VCOLOR" }),
            new ShaderTechnique("DUALMULVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "VCOLOR" }, new string[] { "DUAL", "MUL", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DUALMULATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL" }, new string[] { "DUAL", "MUL", "ATEST" }),
            new ShaderTechnique("DUALADD", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL" }, new string[] { "DUAL", "ADD" }),
            new ShaderTechnique("DUALADDSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL", "SPEC" }, new string[] { "DUAL", "ADD", "SPEC" }),
            new ShaderTechnique("DUALADDSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "SPEC", "VCOLOR" }, new string[] { "DUAL", "ADD", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DUALADDSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "SPEC", "VCOLOR" }, new string[] { "DUAL", "ADD", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DUALADDSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL", "SPEC" }, new string[] { "DUAL", "ADD", "SPEC", "ATEST" }),
            new ShaderTechnique("DUALADDVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "VCOLOR" }, new string[] { "DUAL", "ADD", "VCOLOR" }),
            new ShaderTechnique("DUALADDVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "VCOLOR" }, new string[] { "DUAL", "ADD", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DUALADDATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL" }, new string[] { "DUAL", "ADD", "ATEST" }),
            new ShaderTechnique("DUALMSK", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL" }, new string[] { "DUAL", "MSK" }),
            new ShaderTechnique("DUALMSKSPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL", "SPEC" }, new string[] { "DUAL", "MSK", "SPEC" }),
            new ShaderTechnique("DUALMSKSPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "SPEC", "VCOLOR" }, new string[] { "DUAL", "MSK", "SPEC", "VCOLOR" }),
            new ShaderTechnique("DUALMSKSPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "SPEC", "VCOLOR" }, new string[] { "DUAL", "MSK", "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DUALMSKSPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL", "SPEC" }, new string[] { "DUAL", "MSK", "SPEC", "ATEST" }),
            new ShaderTechnique("DUALMSKVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "VCOLOR" }, new string[] { "DUAL", "MSK", "VCOLOR" }),
            new ShaderTechnique("DUALMSKVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorDualTexture.VertexFormat, new string[] { "DUAL", "VCOLOR" }, new string[] { "DUAL", "MSK", "VCOLOR", "ATEST" }),
            new ShaderTechnique("DUALMSKATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionDualTexture.VertexFormat, new string[] { "DUAL" }, new string[] { "DUAL", "MSK", "ATEST" }),
            new ShaderTechnique("SPEC", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "SPEC" }, new string[] { "SPEC" }),
            new ShaderTechnique("SPECVCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "SPEC", "VCOLOR" }, new string[] { "SPEC", "VCOLOR" }),
            new ShaderTechnique("SPECVCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColorTexture.VertexFormat, new string[] { "SPEC", "VCOLOR" }, new string[] { "SPEC", "VCOLOR", "ATEST" }),
            new ShaderTechnique("SPECATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionTexture.VertexFormat, new string[] { "SPEC" }, new string[] { "SPEC", "ATEST" }),
            new ShaderTechnique("VCOLOR", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "VCOLOR" }, new string[] { "VCOLOR" }),
            new ShaderTechnique("VCOLORATEST", "vsStandardMaterial", "psStandardMaterial", VertexPositionColor.VertexFormat, new string[] { "VCOLOR" }, new string[] { "VCOLOR", "ATEST" }),
            new ShaderTechnique("ATEST", "vsStandardMaterial", "psStandardMaterial", VertexPosition.VertexFormat, null, new string[] { "ATEST" }),

            // GBuffer pass
            new ShaderTechnique("G",        "LPPGBuffer", "vsGBuffer", "LPPGBuffer", "psGBuffer", VertexPositionNormal.VertexFormat,                null,                       null),
            new ShaderTechnique("GN",       "LPPGBuffer", "vsGBuffer", "LPPGBuffer", "psGBuffer", VertexPositionNormalTangentTexture.VertexFormat,  new string[] { "NORMAL" },  new string[] { "NORMAL" }),
            new ShaderTechnique("GD",       "LPPGBuffer", "vsGBuffer", "LPPGBuffer", "psGBuffer", VertexPositionNormal.VertexFormat,                null,                       new string[] { "DEPTH" }),
            new ShaderTechnique("GDN",      "LPPGBuffer", "vsGBuffer", "LPPGBuffer", "psGBuffer", VertexPositionNormalTangentTexture.VertexFormat,  new string[] { "NORMAL" },  new string[] { "NORMAL", "DEPTH" }),
            new ShaderTechnique("GR",       "LPPGBuffer", "vsGBuffer", "LPPGBuffer", "psGBuffer", VertexPositionNormal.VertexFormat,                null,                       new string[] { "MRT" }),
            new ShaderTechnique("GRN",      "LPPGBuffer", "vsGBuffer", "LPPGBuffer", "psGBuffer", VertexPositionNormalTangentTexture.VertexFormat,  new string[] { "NORMAL" },  new string[] { "NORMAL", "MRT" }),

#if ANDROID
            // Video texture
            new ShaderTechnique("Video", "vsStandardMaterialVideo", "psStandardMaterialVideo ", VertexPositionTexture.VertexFormat, null, null),
#endif
        };
        #endregion

        #region Struct

        /// <summary>
        /// GBuffer Shader parameters.
        /// </summary>
        [StructLayout(LayoutKind.Explicit, Size = 16)]
        private struct GBufferMaterialParameters
        {
            /// <summary>
            /// The Specular power
            /// </summary>
            [FieldOffset(0)]
            public float SpecularPower;

            /// <summary>
            /// Texture offset.
            /// </summary>
            [FieldOffset(4)]
            public Vector2 TextureOffset;
        }

        /// <summary>
        /// Shader parameters.
        /// </summary>
        [StructLayout(LayoutKind.Explicit, Size = 96)]
        private struct MaterialParameters
        {
            /// <summary>
            /// The camera position
            /// </summary>
            [FieldOffset(0)]
            public Vector3 CameraPosition;

            /// <summary>
            /// The reference alpha
            /// </summary>
            [FieldOffset(12)]
            public float ReferenceAlpha;

            /// <summary>
            /// The diffuse color
            /// </summary>
            [FieldOffset(16)]
            public Vector3 DiffuseColor;

            /// <summary>
            /// The alpha
            /// </summary>
            [FieldOffset(28)]
            public float Alpha;

            /// <summary>
            /// The ambient color
            /// </summary>
            [FieldOffset(32)]
            public Vector3 AmbientColor;

            /// <summary>
            /// The emissive color
            /// </summary>
            [FieldOffset(48)]
            public Vector3 EmissiveColor;

            /// <summary>
            /// Fix texture coordinates in OpenGL
            /// </summary>
            [FieldOffset(60)]
            public float TexCoordFix;

            /// <summary>
            /// Texture offset 1.
            /// </summary>
            [FieldOffset(64)]
            public Vector2 TextureOffset1;

            /// <summary>
            /// Texture offset 2.
            /// </summary>
            [FieldOffset(72)]
            public Vector2 TextureOffset2;

            /// <summary>
            /// Fresnel Factor.
            /// </summary>
            [FieldOffset(80)]
            public float FresnelFactor;

            /// <summary>
            /// IBL Factor.
            /// </summary>
            [FieldOffset(84)]
            public float IBLFactor;

            /// <summary>
            /// EnvironmentAmount Factor.
            /// </summary>
            [FieldOffset(88)]
            public float EnvironmentAmount;
        }
        #endregion

        #region techniques array

        /// <summary>
        /// The techniques array
        /// </summary>
        private static string[] s = new string[]
                {
                    "Simple",
                    "LIT",
                    "LITIBL",
                    "LITIBLENV",
                    "LITIBLENVEMIS",
                    "LITIBLENVEMISDIFF",
                    "LITIBLENVEMISDIFFDUALLMAP",
                    "LITIBLENVEMISDIFFDUALLMAPSPEC",
                    "LITIBLENVEMISDIFFDUALLMAPSPECVCOLOR",
                    "LITIBLENVEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "LITIBLENVEMISDIFFDUALLMAPSPECATEST",
                    "LITIBLENVEMISDIFFDUALLMAPVCOLOR",
                    "LITIBLENVEMISDIFFDUALLMAPVCOLORATEST",
                    "LITIBLENVEMISDIFFDUALLMAPATEST",
                    "LITIBLENVEMISDIFFDUALMUL",
                    "LITIBLENVEMISDIFFDUALMULSPEC",
                    "LITIBLENVEMISDIFFDUALMULSPECVCOLOR",
                    "LITIBLENVEMISDIFFDUALMULSPECVCOLORATEST",
                    "LITIBLENVEMISDIFFDUALMULSPECATEST",
                    "LITIBLENVEMISDIFFDUALMULVCOLOR",
                    "LITIBLENVEMISDIFFDUALMULVCOLORATEST",
                    "LITIBLENVEMISDIFFDUALMULATEST",
                    "LITIBLENVEMISDIFFDUALADD",
                    "LITIBLENVEMISDIFFDUALADDSPEC",
                    "LITIBLENVEMISDIFFDUALADDSPECVCOLOR",
                    "LITIBLENVEMISDIFFDUALADDSPECVCOLORATEST",
                    "LITIBLENVEMISDIFFDUALADDSPECATEST",
                    "LITIBLENVEMISDIFFDUALADDVCOLOR",
                    "LITIBLENVEMISDIFFDUALADDVCOLORATEST",
                    "LITIBLENVEMISDIFFDUALADDATEST",
                    "LITIBLENVEMISDIFFDUALMSK",
                    "LITIBLENVEMISDIFFDUALMSKSPEC",
                    "LITIBLENVEMISDIFFDUALMSKSPECVCOLOR",
                    "LITIBLENVEMISDIFFDUALMSKSPECVCOLORATEST",
                    "LITIBLENVEMISDIFFDUALMSKSPECATEST",
                    "LITIBLENVEMISDIFFDUALMSKVCOLOR",
                    "LITIBLENVEMISDIFFDUALMSKVCOLORATEST",
                    "LITIBLENVEMISDIFFDUALMSKATEST",
                    "LITIBLENVEMISDIFFSPEC",
                    "LITIBLENVEMISDIFFSPECVCOLOR",
                    "LITIBLENVEMISDIFFSPECVCOLORATEST",
                    "LITIBLENVEMISDIFFSPECATEST",
                    "LITIBLENVEMISDIFFVCOLOR",
                    "LITIBLENVEMISDIFFVCOLORATEST",
                    "LITIBLENVEMISDIFFATEST",
                    "LITIBLENVEMISDUALLMAP",
                    "LITIBLENVEMISDUALLMAPSPEC",
                    "LITIBLENVEMISDUALLMAPSPECVCOLOR",
                    "LITIBLENVEMISDUALLMAPSPECVCOLORATEST",
                    "LITIBLENVEMISDUALLMAPSPECATEST",
                    "LITIBLENVEMISDUALLMAPVCOLOR",
                    "LITIBLENVEMISDUALLMAPVCOLORATEST",
                    "LITIBLENVEMISDUALLMAPATEST",
                    "LITIBLENVEMISDUALMUL",
                    "LITIBLENVEMISDUALMULSPEC",
                    "LITIBLENVEMISDUALMULSPECVCOLOR",
                    "LITIBLENVEMISDUALMULSPECVCOLORATEST",
                    "LITIBLENVEMISDUALMULSPECATEST",
                    "LITIBLENVEMISDUALMULVCOLOR",
                    "LITIBLENVEMISDUALMULVCOLORATEST",
                    "LITIBLENVEMISDUALMULATEST",
                    "LITIBLENVEMISDUALADD",
                    "LITIBLENVEMISDUALADDSPEC",
                    "LITIBLENVEMISDUALADDSPECVCOLOR",
                    "LITIBLENVEMISDUALADDSPECVCOLORATEST",
                    "LITIBLENVEMISDUALADDSPECATEST",
                    "LITIBLENVEMISDUALADDVCOLOR",
                    "LITIBLENVEMISDUALADDVCOLORATEST",
                    "LITIBLENVEMISDUALADDATEST",
                    "LITIBLENVEMISDUALMSK",
                    "LITIBLENVEMISDUALMSKSPEC",
                    "LITIBLENVEMISDUALMSKSPECVCOLOR",
                    "LITIBLENVEMISDUALMSKSPECVCOLORATEST",
                    "LITIBLENVEMISDUALMSKSPECATEST",
                    "LITIBLENVEMISDUALMSKVCOLOR",
                    "LITIBLENVEMISDUALMSKVCOLORATEST",
                    "LITIBLENVEMISDUALMSKATEST",
                    "LITIBLENVEMISSPEC",
                    "LITIBLENVEMISSPECVCOLOR",
                    "LITIBLENVEMISSPECVCOLORATEST",
                    "LITIBLENVEMISSPECATEST",
                    "LITIBLENVEMISVCOLOR",
                    "LITIBLENVEMISVCOLORATEST",
                    "LITIBLENVEMISATEST",
                    "LITIBLENVDIFF",
                    "LITIBLENVDIFFDUALLMAP",
                    "LITIBLENVDIFFDUALLMAPSPEC",
                    "LITIBLENVDIFFDUALLMAPSPECVCOLOR",
                    "LITIBLENVDIFFDUALLMAPSPECVCOLORATEST",
                    "LITIBLENVDIFFDUALLMAPSPECATEST",
                    "LITIBLENVDIFFDUALLMAPVCOLOR",
                    "LITIBLENVDIFFDUALLMAPVCOLORATEST",
                    "LITIBLENVDIFFDUALLMAPATEST",
                    "LITIBLENVDIFFDUALMUL",
                    "LITIBLENVDIFFDUALMULSPEC",
                    "LITIBLENVDIFFDUALMULSPECVCOLOR",
                    "LITIBLENVDIFFDUALMULSPECVCOLORATEST",
                    "LITIBLENVDIFFDUALMULSPECATEST",
                    "LITIBLENVDIFFDUALMULVCOLOR",
                    "LITIBLENVDIFFDUALMULVCOLORATEST",
                    "LITIBLENVDIFFDUALMULATEST",
                    "LITIBLENVDIFFDUALADD",
                    "LITIBLENVDIFFDUALADDSPEC",
                    "LITIBLENVDIFFDUALADDSPECVCOLOR",
                    "LITIBLENVDIFFDUALADDSPECVCOLORATEST",
                    "LITIBLENVDIFFDUALADDSPECATEST",
                    "LITIBLENVDIFFDUALADDVCOLOR",
                    "LITIBLENVDIFFDUALADDVCOLORATEST",
                    "LITIBLENVDIFFDUALADDATEST",
                    "LITIBLENVDIFFDUALMSK",
                    "LITIBLENVDIFFDUALMSKSPEC",
                    "LITIBLENVDIFFDUALMSKSPECVCOLOR",
                    "LITIBLENVDIFFDUALMSKSPECVCOLORATEST",
                    "LITIBLENVDIFFDUALMSKSPECATEST",
                    "LITIBLENVDIFFDUALMSKVCOLOR",
                    "LITIBLENVDIFFDUALMSKVCOLORATEST",
                    "LITIBLENVDIFFDUALMSKATEST",
                    "LITIBLENVDIFFSPEC",
                    "LITIBLENVDIFFSPECVCOLOR",
                    "LITIBLENVDIFFSPECVCOLORATEST",
                    "LITIBLENVDIFFSPECATEST",
                    "LITIBLENVDIFFVCOLOR",
                    "LITIBLENVDIFFVCOLORATEST",
                    "LITIBLENVDIFFATEST",
                    "LITIBLENVDUALLMAP",
                    "LITIBLENVDUALLMAPSPEC",
                    "LITIBLENVDUALLMAPSPECVCOLOR",
                    "LITIBLENVDUALLMAPSPECVCOLORATEST",
                    "LITIBLENVDUALLMAPSPECATEST",
                    "LITIBLENVDUALLMAPVCOLOR",
                    "LITIBLENVDUALLMAPVCOLORATEST",
                    "LITIBLENVDUALLMAPATEST",
                    "LITIBLENVDUALMUL",
                    "LITIBLENVDUALMULSPEC",
                    "LITIBLENVDUALMULSPECVCOLOR",
                    "LITIBLENVDUALMULSPECVCOLORATEST",
                    "LITIBLENVDUALMULSPECATEST",
                    "LITIBLENVDUALMULVCOLOR",
                    "LITIBLENVDUALMULVCOLORATEST",
                    "LITIBLENVDUALMULATEST",
                    "LITIBLENVDUALADD",
                    "LITIBLENVDUALADDSPEC",
                    "LITIBLENVDUALADDSPECVCOLOR",
                    "LITIBLENVDUALADDSPECVCOLORATEST",
                    "LITIBLENVDUALADDSPECATEST",
                    "LITIBLENVDUALADDVCOLOR",
                    "LITIBLENVDUALADDVCOLORATEST",
                    "LITIBLENVDUALADDATEST",
                    "LITIBLENVDUALMSK",
                    "LITIBLENVDUALMSKSPEC",
                    "LITIBLENVDUALMSKSPECVCOLOR",
                    "LITIBLENVDUALMSKSPECVCOLORATEST",
                    "LITIBLENVDUALMSKSPECATEST",
                    "LITIBLENVDUALMSKVCOLOR",
                    "LITIBLENVDUALMSKVCOLORATEST",
                    "LITIBLENVDUALMSKATEST",
                    "LITIBLENVSPEC",
                    "LITIBLENVSPECVCOLOR",
                    "LITIBLENVSPECVCOLORATEST",
                    "LITIBLENVSPECATEST",
                    "LITIBLENVVCOLOR",
                    "LITIBLENVVCOLORATEST",
                    "LITIBLENVATEST",
                    "LITIBLENVFRES",
                    "LITIBLENVFRESEMIS",
                    "LITIBLENVFRESEMISDIFF",
                    "LITIBLENVFRESEMISDIFFDUALLMAP",
                    "LITIBLENVFRESEMISDIFFDUALLMAPSPEC",
                    "LITIBLENVFRESEMISDIFFDUALLMAPSPECVCOLOR",
                    "LITIBLENVFRESEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFDUALLMAPSPECATEST",
                    "LITIBLENVFRESEMISDIFFDUALLMAPVCOLOR",
                    "LITIBLENVFRESEMISDIFFDUALLMAPVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFDUALLMAPATEST",
                    "LITIBLENVFRESEMISDIFFDUALMUL",
                    "LITIBLENVFRESEMISDIFFDUALMULSPEC",
                    "LITIBLENVFRESEMISDIFFDUALMULSPECVCOLOR",
                    "LITIBLENVFRESEMISDIFFDUALMULSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFDUALMULSPECATEST",
                    "LITIBLENVFRESEMISDIFFDUALMULVCOLOR",
                    "LITIBLENVFRESEMISDIFFDUALMULVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFDUALMULATEST",
                    "LITIBLENVFRESEMISDIFFDUALADD",
                    "LITIBLENVFRESEMISDIFFDUALADDSPEC",
                    "LITIBLENVFRESEMISDIFFDUALADDSPECVCOLOR",
                    "LITIBLENVFRESEMISDIFFDUALADDSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFDUALADDSPECATEST",
                    "LITIBLENVFRESEMISDIFFDUALADDVCOLOR",
                    "LITIBLENVFRESEMISDIFFDUALADDVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFDUALADDATEST",
                    "LITIBLENVFRESEMISDIFFDUALMSK",
                    "LITIBLENVFRESEMISDIFFDUALMSKSPEC",
                    "LITIBLENVFRESEMISDIFFDUALMSKSPECVCOLOR",
                    "LITIBLENVFRESEMISDIFFDUALMSKSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFDUALMSKSPECATEST",
                    "LITIBLENVFRESEMISDIFFDUALMSKVCOLOR",
                    "LITIBLENVFRESEMISDIFFDUALMSKVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFDUALMSKATEST",
                    "LITIBLENVFRESEMISDIFFSPEC",
                    "LITIBLENVFRESEMISDIFFSPECVCOLOR",
                    "LITIBLENVFRESEMISDIFFSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFSPECATEST",
                    "LITIBLENVFRESEMISDIFFVCOLOR",
                    "LITIBLENVFRESEMISDIFFVCOLORATEST",
                    "LITIBLENVFRESEMISDIFFATEST",
                    "LITIBLENVFRESEMISDUALLMAP",
                    "LITIBLENVFRESEMISDUALLMAPSPEC",
                    "LITIBLENVFRESEMISDUALLMAPSPECVCOLOR",
                    "LITIBLENVFRESEMISDUALLMAPSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDUALLMAPSPECATEST",
                    "LITIBLENVFRESEMISDUALLMAPVCOLOR",
                    "LITIBLENVFRESEMISDUALLMAPVCOLORATEST",
                    "LITIBLENVFRESEMISDUALLMAPATEST",
                    "LITIBLENVFRESEMISDUALMUL",
                    "LITIBLENVFRESEMISDUALMULSPEC",
                    "LITIBLENVFRESEMISDUALMULSPECVCOLOR",
                    "LITIBLENVFRESEMISDUALMULSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDUALMULSPECATEST",
                    "LITIBLENVFRESEMISDUALMULVCOLOR",
                    "LITIBLENVFRESEMISDUALMULVCOLORATEST",
                    "LITIBLENVFRESEMISDUALMULATEST",
                    "LITIBLENVFRESEMISDUALADD",
                    "LITIBLENVFRESEMISDUALADDSPEC",
                    "LITIBLENVFRESEMISDUALADDSPECVCOLOR",
                    "LITIBLENVFRESEMISDUALADDSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDUALADDSPECATEST",
                    "LITIBLENVFRESEMISDUALADDVCOLOR",
                    "LITIBLENVFRESEMISDUALADDVCOLORATEST",
                    "LITIBLENVFRESEMISDUALADDATEST",
                    "LITIBLENVFRESEMISDUALMSK",
                    "LITIBLENVFRESEMISDUALMSKSPEC",
                    "LITIBLENVFRESEMISDUALMSKSPECVCOLOR",
                    "LITIBLENVFRESEMISDUALMSKSPECVCOLORATEST",
                    "LITIBLENVFRESEMISDUALMSKSPECATEST",
                    "LITIBLENVFRESEMISDUALMSKVCOLOR",
                    "LITIBLENVFRESEMISDUALMSKVCOLORATEST",
                    "LITIBLENVFRESEMISDUALMSKATEST",
                    "LITIBLENVFRESEMISSPEC",
                    "LITIBLENVFRESEMISSPECVCOLOR",
                    "LITIBLENVFRESEMISSPECVCOLORATEST",
                    "LITIBLENVFRESEMISSPECATEST",
                    "LITIBLENVFRESEMISVCOLOR",
                    "LITIBLENVFRESEMISVCOLORATEST",
                    "LITIBLENVFRESEMISATEST",
                    "LITIBLENVFRESDIFF",
                    "LITIBLENVFRESDIFFDUALLMAP",
                    "LITIBLENVFRESDIFFDUALLMAPSPEC",
                    "LITIBLENVFRESDIFFDUALLMAPSPECVCOLOR",
                    "LITIBLENVFRESDIFFDUALLMAPSPECVCOLORATEST",
                    "LITIBLENVFRESDIFFDUALLMAPSPECATEST",
                    "LITIBLENVFRESDIFFDUALLMAPVCOLOR",
                    "LITIBLENVFRESDIFFDUALLMAPVCOLORATEST",
                    "LITIBLENVFRESDIFFDUALLMAPATEST",
                    "LITIBLENVFRESDIFFDUALMUL",
                    "LITIBLENVFRESDIFFDUALMULSPEC",
                    "LITIBLENVFRESDIFFDUALMULSPECVCOLOR",
                    "LITIBLENVFRESDIFFDUALMULSPECVCOLORATEST",
                    "LITIBLENVFRESDIFFDUALMULSPECATEST",
                    "LITIBLENVFRESDIFFDUALMULVCOLOR",
                    "LITIBLENVFRESDIFFDUALMULVCOLORATEST",
                    "LITIBLENVFRESDIFFDUALMULATEST",
                    "LITIBLENVFRESDIFFDUALADD",
                    "LITIBLENVFRESDIFFDUALADDSPEC",
                    "LITIBLENVFRESDIFFDUALADDSPECVCOLOR",
                    "LITIBLENVFRESDIFFDUALADDSPECVCOLORATEST",
                    "LITIBLENVFRESDIFFDUALADDSPECATEST",
                    "LITIBLENVFRESDIFFDUALADDVCOLOR",
                    "LITIBLENVFRESDIFFDUALADDVCOLORATEST",
                    "LITIBLENVFRESDIFFDUALADDATEST",
                    "LITIBLENVFRESDIFFDUALMSK",
                    "LITIBLENVFRESDIFFDUALMSKSPEC",
                    "LITIBLENVFRESDIFFDUALMSKSPECVCOLOR",
                    "LITIBLENVFRESDIFFDUALMSKSPECVCOLORATEST",
                    "LITIBLENVFRESDIFFDUALMSKSPECATEST",
                    "LITIBLENVFRESDIFFDUALMSKVCOLOR",
                    "LITIBLENVFRESDIFFDUALMSKVCOLORATEST",
                    "LITIBLENVFRESDIFFDUALMSKATEST",
                    "LITIBLENVFRESDIFFSPEC",
                    "LITIBLENVFRESDIFFSPECVCOLOR",
                    "LITIBLENVFRESDIFFSPECVCOLORATEST",
                    "LITIBLENVFRESDIFFSPECATEST",
                    "LITIBLENVFRESDIFFVCOLOR",
                    "LITIBLENVFRESDIFFVCOLORATEST",
                    "LITIBLENVFRESDIFFATEST",
                    "LITIBLENVFRESDUALLMAP",
                    "LITIBLENVFRESDUALLMAPSPEC",
                    "LITIBLENVFRESDUALLMAPSPECVCOLOR",
                    "LITIBLENVFRESDUALLMAPSPECVCOLORATEST",
                    "LITIBLENVFRESDUALLMAPSPECATEST",
                    "LITIBLENVFRESDUALLMAPVCOLOR",
                    "LITIBLENVFRESDUALLMAPVCOLORATEST",
                    "LITIBLENVFRESDUALLMAPATEST",
                    "LITIBLENVFRESDUALMUL",
                    "LITIBLENVFRESDUALMULSPEC",
                    "LITIBLENVFRESDUALMULSPECVCOLOR",
                    "LITIBLENVFRESDUALMULSPECVCOLORATEST",
                    "LITIBLENVFRESDUALMULSPECATEST",
                    "LITIBLENVFRESDUALMULVCOLOR",
                    "LITIBLENVFRESDUALMULVCOLORATEST",
                    "LITIBLENVFRESDUALMULATEST",
                    "LITIBLENVFRESDUALADD",
                    "LITIBLENVFRESDUALADDSPEC",
                    "LITIBLENVFRESDUALADDSPECVCOLOR",
                    "LITIBLENVFRESDUALADDSPECVCOLORATEST",
                    "LITIBLENVFRESDUALADDSPECATEST",
                    "LITIBLENVFRESDUALADDVCOLOR",
                    "LITIBLENVFRESDUALADDVCOLORATEST",
                    "LITIBLENVFRESDUALADDATEST",
                    "LITIBLENVFRESDUALMSK",
                    "LITIBLENVFRESDUALMSKSPEC",
                    "LITIBLENVFRESDUALMSKSPECVCOLOR",
                    "LITIBLENVFRESDUALMSKSPECVCOLORATEST",
                    "LITIBLENVFRESDUALMSKSPECATEST",
                    "LITIBLENVFRESDUALMSKVCOLOR",
                    "LITIBLENVFRESDUALMSKVCOLORATEST",
                    "LITIBLENVFRESDUALMSKATEST",
                    "LITIBLENVFRESSPEC",
                    "LITIBLENVFRESSPECVCOLOR",
                    "LITIBLENVFRESSPECVCOLORATEST",
                    "LITIBLENVFRESSPECATEST",
                    "LITIBLENVFRESVCOLOR",
                    "LITIBLENVFRESVCOLORATEST",
                    "LITIBLENVFRESATEST",
                    "LITIBLEMIS",
                    "LITIBLEMISDIFF",
                    "LITIBLEMISDIFFDUALLMAP",
                    "LITIBLEMISDIFFDUALLMAPSPEC",
                    "LITIBLEMISDIFFDUALLMAPSPECVCOLOR",
                    "LITIBLEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "LITIBLEMISDIFFDUALLMAPSPECATEST",
                    "LITIBLEMISDIFFDUALLMAPVCOLOR",
                    "LITIBLEMISDIFFDUALLMAPVCOLORATEST",
                    "LITIBLEMISDIFFDUALLMAPATEST",
                    "LITIBLEMISDIFFDUALMUL",
                    "LITIBLEMISDIFFDUALMULSPEC",
                    "LITIBLEMISDIFFDUALMULSPECVCOLOR",
                    "LITIBLEMISDIFFDUALMULSPECVCOLORATEST",
                    "LITIBLEMISDIFFDUALMULSPECATEST",
                    "LITIBLEMISDIFFDUALMULVCOLOR",
                    "LITIBLEMISDIFFDUALMULVCOLORATEST",
                    "LITIBLEMISDIFFDUALMULATEST",
                    "LITIBLEMISDIFFDUALADD",
                    "LITIBLEMISDIFFDUALADDSPEC",
                    "LITIBLEMISDIFFDUALADDSPECVCOLOR",
                    "LITIBLEMISDIFFDUALADDSPECVCOLORATEST",
                    "LITIBLEMISDIFFDUALADDSPECATEST",
                    "LITIBLEMISDIFFDUALADDVCOLOR",
                    "LITIBLEMISDIFFDUALADDVCOLORATEST",
                    "LITIBLEMISDIFFDUALADDATEST",
                    "LITIBLEMISDIFFDUALMSK",
                    "LITIBLEMISDIFFDUALMSKSPEC",
                    "LITIBLEMISDIFFDUALMSKSPECVCOLOR",
                    "LITIBLEMISDIFFDUALMSKSPECVCOLORATEST",
                    "LITIBLEMISDIFFDUALMSKSPECATEST",
                    "LITIBLEMISDIFFDUALMSKVCOLOR",
                    "LITIBLEMISDIFFDUALMSKVCOLORATEST",
                    "LITIBLEMISDIFFDUALMSKATEST",
                    "LITIBLEMISDIFFSPEC",
                    "LITIBLEMISDIFFSPECVCOLOR",
                    "LITIBLEMISDIFFSPECVCOLORATEST",
                    "LITIBLEMISDIFFSPECATEST",
                    "LITIBLEMISDIFFVCOLOR",
                    "LITIBLEMISDIFFVCOLORATEST",
                    "LITIBLEMISDIFFATEST",
                    "LITIBLEMISDUALLMAP",
                    "LITIBLEMISDUALLMAPSPEC",
                    "LITIBLEMISDUALLMAPSPECVCOLOR",
                    "LITIBLEMISDUALLMAPSPECVCOLORATEST",
                    "LITIBLEMISDUALLMAPSPECATEST",
                    "LITIBLEMISDUALLMAPVCOLOR",
                    "LITIBLEMISDUALLMAPVCOLORATEST",
                    "LITIBLEMISDUALLMAPATEST",
                    "LITIBLEMISDUALMUL",
                    "LITIBLEMISDUALMULSPEC",
                    "LITIBLEMISDUALMULSPECVCOLOR",
                    "LITIBLEMISDUALMULSPECVCOLORATEST",
                    "LITIBLEMISDUALMULSPECATEST",
                    "LITIBLEMISDUALMULVCOLOR",
                    "LITIBLEMISDUALMULVCOLORATEST",
                    "LITIBLEMISDUALMULATEST",
                    "LITIBLEMISDUALADD",
                    "LITIBLEMISDUALADDSPEC",
                    "LITIBLEMISDUALADDSPECVCOLOR",
                    "LITIBLEMISDUALADDSPECVCOLORATEST",
                    "LITIBLEMISDUALADDSPECATEST",
                    "LITIBLEMISDUALADDVCOLOR",
                    "LITIBLEMISDUALADDVCOLORATEST",
                    "LITIBLEMISDUALADDATEST",
                    "LITIBLEMISDUALMSK",
                    "LITIBLEMISDUALMSKSPEC",
                    "LITIBLEMISDUALMSKSPECVCOLOR",
                    "LITIBLEMISDUALMSKSPECVCOLORATEST",
                    "LITIBLEMISDUALMSKSPECATEST",
                    "LITIBLEMISDUALMSKVCOLOR",
                    "LITIBLEMISDUALMSKVCOLORATEST",
                    "LITIBLEMISDUALMSKATEST",
                    "LITIBLEMISSPEC",
                    "LITIBLEMISSPECVCOLOR",
                    "LITIBLEMISSPECVCOLORATEST",
                    "LITIBLEMISSPECATEST",
                    "LITIBLEMISVCOLOR",
                    "LITIBLEMISVCOLORATEST",
                    "LITIBLEMISATEST",
                    "LITIBLDIFF",
                    "LITIBLDIFFDUALLMAP",
                    "LITIBLDIFFDUALLMAPSPEC",
                    "LITIBLDIFFDUALLMAPSPECVCOLOR",
                    "LITIBLDIFFDUALLMAPSPECVCOLORATEST",
                    "LITIBLDIFFDUALLMAPSPECATEST",
                    "LITIBLDIFFDUALLMAPVCOLOR",
                    "LITIBLDIFFDUALLMAPVCOLORATEST",
                    "LITIBLDIFFDUALLMAPATEST",
                    "LITIBLDIFFDUALMUL",
                    "LITIBLDIFFDUALMULSPEC",
                    "LITIBLDIFFDUALMULSPECVCOLOR",
                    "LITIBLDIFFDUALMULSPECVCOLORATEST",
                    "LITIBLDIFFDUALMULSPECATEST",
                    "LITIBLDIFFDUALMULVCOLOR",
                    "LITIBLDIFFDUALMULVCOLORATEST",
                    "LITIBLDIFFDUALMULATEST",
                    "LITIBLDIFFDUALADD",
                    "LITIBLDIFFDUALADDSPEC",
                    "LITIBLDIFFDUALADDSPECVCOLOR",
                    "LITIBLDIFFDUALADDSPECVCOLORATEST",
                    "LITIBLDIFFDUALADDSPECATEST",
                    "LITIBLDIFFDUALADDVCOLOR",
                    "LITIBLDIFFDUALADDVCOLORATEST",
                    "LITIBLDIFFDUALADDATEST",
                    "LITIBLDIFFDUALMSK",
                    "LITIBLDIFFDUALMSKSPEC",
                    "LITIBLDIFFDUALMSKSPECVCOLOR",
                    "LITIBLDIFFDUALMSKSPECVCOLORATEST",
                    "LITIBLDIFFDUALMSKSPECATEST",
                    "LITIBLDIFFDUALMSKVCOLOR",
                    "LITIBLDIFFDUALMSKVCOLORATEST",
                    "LITIBLDIFFDUALMSKATEST",
                    "LITIBLDIFFSPEC",
                    "LITIBLDIFFSPECVCOLOR",
                    "LITIBLDIFFSPECVCOLORATEST",
                    "LITIBLDIFFSPECATEST",
                    "LITIBLDIFFVCOLOR",
                    "LITIBLDIFFVCOLORATEST",
                    "LITIBLDIFFATEST",
                    "LITIBLDUALLMAP",
                    "LITIBLDUALLMAPSPEC",
                    "LITIBLDUALLMAPSPECVCOLOR",
                    "LITIBLDUALLMAPSPECVCOLORATEST",
                    "LITIBLDUALLMAPSPECATEST",
                    "LITIBLDUALLMAPVCOLOR",
                    "LITIBLDUALLMAPVCOLORATEST",
                    "LITIBLDUALLMAPATEST",
                    "LITIBLDUALMUL",
                    "LITIBLDUALMULSPEC",
                    "LITIBLDUALMULSPECVCOLOR",
                    "LITIBLDUALMULSPECVCOLORATEST",
                    "LITIBLDUALMULSPECATEST",
                    "LITIBLDUALMULVCOLOR",
                    "LITIBLDUALMULVCOLORATEST",
                    "LITIBLDUALMULATEST",
                    "LITIBLDUALADD",
                    "LITIBLDUALADDSPEC",
                    "LITIBLDUALADDSPECVCOLOR",
                    "LITIBLDUALADDSPECVCOLORATEST",
                    "LITIBLDUALADDSPECATEST",
                    "LITIBLDUALADDVCOLOR",
                    "LITIBLDUALADDVCOLORATEST",
                    "LITIBLDUALADDATEST",
                    "LITIBLDUALMSK",
                    "LITIBLDUALMSKSPEC",
                    "LITIBLDUALMSKSPECVCOLOR",
                    "LITIBLDUALMSKSPECVCOLORATEST",
                    "LITIBLDUALMSKSPECATEST",
                    "LITIBLDUALMSKVCOLOR",
                    "LITIBLDUALMSKVCOLORATEST",
                    "LITIBLDUALMSKATEST",
                    "LITIBLSPEC",
                    "LITIBLSPECVCOLOR",
                    "LITIBLSPECVCOLORATEST",
                    "LITIBLSPECATEST",
                    "LITIBLVCOLOR",
                    "LITIBLVCOLORATEST",
                    "LITIBLATEST",
                    "LITENV",
                    "LITENVEMIS",
                    "LITENVEMISDIFF",
                    "LITENVEMISDIFFDUALLMAP",
                    "LITENVEMISDIFFDUALLMAPSPEC",
                    "LITENVEMISDIFFDUALLMAPSPECVCOLOR",
                    "LITENVEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "LITENVEMISDIFFDUALLMAPSPECATEST",
                    "LITENVEMISDIFFDUALLMAPVCOLOR",
                    "LITENVEMISDIFFDUALLMAPVCOLORATEST",
                    "LITENVEMISDIFFDUALLMAPATEST",
                    "LITENVEMISDIFFDUALMUL",
                    "LITENVEMISDIFFDUALMULSPEC",
                    "LITENVEMISDIFFDUALMULSPECVCOLOR",
                    "LITENVEMISDIFFDUALMULSPECVCOLORATEST",
                    "LITENVEMISDIFFDUALMULSPECATEST",
                    "LITENVEMISDIFFDUALMULVCOLOR",
                    "LITENVEMISDIFFDUALMULVCOLORATEST",
                    "LITENVEMISDIFFDUALMULATEST",
                    "LITENVEMISDIFFDUALADD",
                    "LITENVEMISDIFFDUALADDSPEC",
                    "LITENVEMISDIFFDUALADDSPECVCOLOR",
                    "LITENVEMISDIFFDUALADDSPECVCOLORATEST",
                    "LITENVEMISDIFFDUALADDSPECATEST",
                    "LITENVEMISDIFFDUALADDVCOLOR",
                    "LITENVEMISDIFFDUALADDVCOLORATEST",
                    "LITENVEMISDIFFDUALADDATEST",
                    "LITENVEMISDIFFDUALMSK",
                    "LITENVEMISDIFFDUALMSKSPEC",
                    "LITENVEMISDIFFDUALMSKSPECVCOLOR",
                    "LITENVEMISDIFFDUALMSKSPECVCOLORATEST",
                    "LITENVEMISDIFFDUALMSKSPECATEST",
                    "LITENVEMISDIFFDUALMSKVCOLOR",
                    "LITENVEMISDIFFDUALMSKVCOLORATEST",
                    "LITENVEMISDIFFDUALMSKATEST",
                    "LITENVEMISDIFFSPEC",
                    "LITENVEMISDIFFSPECVCOLOR",
                    "LITENVEMISDIFFSPECVCOLORATEST",
                    "LITENVEMISDIFFSPECATEST",
                    "LITENVEMISDIFFVCOLOR",
                    "LITENVEMISDIFFVCOLORATEST",
                    "LITENVEMISDIFFATEST",
                    "LITENVEMISDUALLMAP",
                    "LITENVEMISDUALLMAPSPEC",
                    "LITENVEMISDUALLMAPSPECVCOLOR",
                    "LITENVEMISDUALLMAPSPECVCOLORATEST",
                    "LITENVEMISDUALLMAPSPECATEST",
                    "LITENVEMISDUALLMAPVCOLOR",
                    "LITENVEMISDUALLMAPVCOLORATEST",
                    "LITENVEMISDUALLMAPATEST",
                    "LITENVEMISDUALMUL",
                    "LITENVEMISDUALMULSPEC",
                    "LITENVEMISDUALMULSPECVCOLOR",
                    "LITENVEMISDUALMULSPECVCOLORATEST",
                    "LITENVEMISDUALMULSPECATEST",
                    "LITENVEMISDUALMULVCOLOR",
                    "LITENVEMISDUALMULVCOLORATEST",
                    "LITENVEMISDUALMULATEST",
                    "LITENVEMISDUALADD",
                    "LITENVEMISDUALADDSPEC",
                    "LITENVEMISDUALADDSPECVCOLOR",
                    "LITENVEMISDUALADDSPECVCOLORATEST",
                    "LITENVEMISDUALADDSPECATEST",
                    "LITENVEMISDUALADDVCOLOR",
                    "LITENVEMISDUALADDVCOLORATEST",
                    "LITENVEMISDUALADDATEST",
                    "LITENVEMISDUALMSK",
                    "LITENVEMISDUALMSKSPEC",
                    "LITENVEMISDUALMSKSPECVCOLOR",
                    "LITENVEMISDUALMSKSPECVCOLORATEST",
                    "LITENVEMISDUALMSKSPECATEST",
                    "LITENVEMISDUALMSKVCOLOR",
                    "LITENVEMISDUALMSKVCOLORATEST",
                    "LITENVEMISDUALMSKATEST",
                    "LITENVEMISSPEC",
                    "LITENVEMISSPECVCOLOR",
                    "LITENVEMISSPECVCOLORATEST",
                    "LITENVEMISSPECATEST",
                    "LITENVEMISVCOLOR",
                    "LITENVEMISVCOLORATEST",
                    "LITENVEMISATEST",
                    "LITENVDIFF",
                    "LITENVDIFFDUALLMAP",
                    "LITENVDIFFDUALLMAPSPEC",
                    "LITENVDIFFDUALLMAPSPECVCOLOR",
                    "LITENVDIFFDUALLMAPSPECVCOLORATEST",
                    "LITENVDIFFDUALLMAPSPECATEST",
                    "LITENVDIFFDUALLMAPVCOLOR",
                    "LITENVDIFFDUALLMAPVCOLORATEST",
                    "LITENVDIFFDUALLMAPATEST",
                    "LITENVDIFFDUALMUL",
                    "LITENVDIFFDUALMULSPEC",
                    "LITENVDIFFDUALMULSPECVCOLOR",
                    "LITENVDIFFDUALMULSPECVCOLORATEST",
                    "LITENVDIFFDUALMULSPECATEST",
                    "LITENVDIFFDUALMULVCOLOR",
                    "LITENVDIFFDUALMULVCOLORATEST",
                    "LITENVDIFFDUALMULATEST",
                    "LITENVDIFFDUALADD",
                    "LITENVDIFFDUALADDSPEC",
                    "LITENVDIFFDUALADDSPECVCOLOR",
                    "LITENVDIFFDUALADDSPECVCOLORATEST",
                    "LITENVDIFFDUALADDSPECATEST",
                    "LITENVDIFFDUALADDVCOLOR",
                    "LITENVDIFFDUALADDVCOLORATEST",
                    "LITENVDIFFDUALADDATEST",
                    "LITENVDIFFDUALMSK",
                    "LITENVDIFFDUALMSKSPEC",
                    "LITENVDIFFDUALMSKSPECVCOLOR",
                    "LITENVDIFFDUALMSKSPECVCOLORATEST",
                    "LITENVDIFFDUALMSKSPECATEST",
                    "LITENVDIFFDUALMSKVCOLOR",
                    "LITENVDIFFDUALMSKVCOLORATEST",
                    "LITENVDIFFDUALMSKATEST",
                    "LITENVDIFFSPEC",
                    "LITENVDIFFSPECVCOLOR",
                    "LITENVDIFFSPECVCOLORATEST",
                    "LITENVDIFFSPECATEST",
                    "LITENVDIFFVCOLOR",
                    "LITENVDIFFVCOLORATEST",
                    "LITENVDIFFATEST",
                    "LITENVDUALLMAP",
                    "LITENVDUALLMAPSPEC",
                    "LITENVDUALLMAPSPECVCOLOR",
                    "LITENVDUALLMAPSPECVCOLORATEST",
                    "LITENVDUALLMAPSPECATEST",
                    "LITENVDUALLMAPVCOLOR",
                    "LITENVDUALLMAPVCOLORATEST",
                    "LITENVDUALLMAPATEST",
                    "LITENVDUALMUL",
                    "LITENVDUALMULSPEC",
                    "LITENVDUALMULSPECVCOLOR",
                    "LITENVDUALMULSPECVCOLORATEST",
                    "LITENVDUALMULSPECATEST",
                    "LITENVDUALMULVCOLOR",
                    "LITENVDUALMULVCOLORATEST",
                    "LITENVDUALMULATEST",
                    "LITENVDUALADD",
                    "LITENVDUALADDSPEC",
                    "LITENVDUALADDSPECVCOLOR",
                    "LITENVDUALADDSPECVCOLORATEST",
                    "LITENVDUALADDSPECATEST",
                    "LITENVDUALADDVCOLOR",
                    "LITENVDUALADDVCOLORATEST",
                    "LITENVDUALADDATEST",
                    "LITENVDUALMSK",
                    "LITENVDUALMSKSPEC",
                    "LITENVDUALMSKSPECVCOLOR",
                    "LITENVDUALMSKSPECVCOLORATEST",
                    "LITENVDUALMSKSPECATEST",
                    "LITENVDUALMSKVCOLOR",
                    "LITENVDUALMSKVCOLORATEST",
                    "LITENVDUALMSKATEST",
                    "LITENVSPEC",
                    "LITENVSPECVCOLOR",
                    "LITENVSPECVCOLORATEST",
                    "LITENVSPECATEST",
                    "LITENVVCOLOR",
                    "LITENVVCOLORATEST",
                    "LITENVATEST",
                    "LITENVFRES",
                    "LITENVFRESEMIS",
                    "LITENVFRESEMISDIFF",
                    "LITENVFRESEMISDIFFDUALLMAP",
                    "LITENVFRESEMISDIFFDUALLMAPSPEC",
                    "LITENVFRESEMISDIFFDUALLMAPSPECVCOLOR",
                    "LITENVFRESEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "LITENVFRESEMISDIFFDUALLMAPSPECATEST",
                    "LITENVFRESEMISDIFFDUALLMAPVCOLOR",
                    "LITENVFRESEMISDIFFDUALLMAPVCOLORATEST",
                    "LITENVFRESEMISDIFFDUALLMAPATEST",
                    "LITENVFRESEMISDIFFDUALMUL",
                    "LITENVFRESEMISDIFFDUALMULSPEC",
                    "LITENVFRESEMISDIFFDUALMULSPECVCOLOR",
                    "LITENVFRESEMISDIFFDUALMULSPECVCOLORATEST",
                    "LITENVFRESEMISDIFFDUALMULSPECATEST",
                    "LITENVFRESEMISDIFFDUALMULVCOLOR",
                    "LITENVFRESEMISDIFFDUALMULVCOLORATEST",
                    "LITENVFRESEMISDIFFDUALMULATEST",
                    "LITENVFRESEMISDIFFDUALADD",
                    "LITENVFRESEMISDIFFDUALADDSPEC",
                    "LITENVFRESEMISDIFFDUALADDSPECVCOLOR",
                    "LITENVFRESEMISDIFFDUALADDSPECVCOLORATEST",
                    "LITENVFRESEMISDIFFDUALADDSPECATEST",
                    "LITENVFRESEMISDIFFDUALADDVCOLOR",
                    "LITENVFRESEMISDIFFDUALADDVCOLORATEST",
                    "LITENVFRESEMISDIFFDUALADDATEST",
                    "LITENVFRESEMISDIFFDUALMSK",
                    "LITENVFRESEMISDIFFDUALMSKSPEC",
                    "LITENVFRESEMISDIFFDUALMSKSPECVCOLOR",
                    "LITENVFRESEMISDIFFDUALMSKSPECVCOLORATEST",
                    "LITENVFRESEMISDIFFDUALMSKSPECATEST",
                    "LITENVFRESEMISDIFFDUALMSKVCOLOR",
                    "LITENVFRESEMISDIFFDUALMSKVCOLORATEST",
                    "LITENVFRESEMISDIFFDUALMSKATEST",
                    "LITENVFRESEMISDIFFSPEC",
                    "LITENVFRESEMISDIFFSPECVCOLOR",
                    "LITENVFRESEMISDIFFSPECVCOLORATEST",
                    "LITENVFRESEMISDIFFSPECATEST",
                    "LITENVFRESEMISDIFFVCOLOR",
                    "LITENVFRESEMISDIFFVCOLORATEST",
                    "LITENVFRESEMISDIFFATEST",
                    "LITENVFRESEMISDUALLMAP",
                    "LITENVFRESEMISDUALLMAPSPEC",
                    "LITENVFRESEMISDUALLMAPSPECVCOLOR",
                    "LITENVFRESEMISDUALLMAPSPECVCOLORATEST",
                    "LITENVFRESEMISDUALLMAPSPECATEST",
                    "LITENVFRESEMISDUALLMAPVCOLOR",
                    "LITENVFRESEMISDUALLMAPVCOLORATEST",
                    "LITENVFRESEMISDUALLMAPATEST",
                    "LITENVFRESEMISDUALMUL",
                    "LITENVFRESEMISDUALMULSPEC",
                    "LITENVFRESEMISDUALMULSPECVCOLOR",
                    "LITENVFRESEMISDUALMULSPECVCOLORATEST",
                    "LITENVFRESEMISDUALMULSPECATEST",
                    "LITENVFRESEMISDUALMULVCOLOR",
                    "LITENVFRESEMISDUALMULVCOLORATEST",
                    "LITENVFRESEMISDUALMULATEST",
                    "LITENVFRESEMISDUALADD",
                    "LITENVFRESEMISDUALADDSPEC",
                    "LITENVFRESEMISDUALADDSPECVCOLOR",
                    "LITENVFRESEMISDUALADDSPECVCOLORATEST",
                    "LITENVFRESEMISDUALADDSPECATEST",
                    "LITENVFRESEMISDUALADDVCOLOR",
                    "LITENVFRESEMISDUALADDVCOLORATEST",
                    "LITENVFRESEMISDUALADDATEST",
                    "LITENVFRESEMISDUALMSK",
                    "LITENVFRESEMISDUALMSKSPEC",
                    "LITENVFRESEMISDUALMSKSPECVCOLOR",
                    "LITENVFRESEMISDUALMSKSPECVCOLORATEST",
                    "LITENVFRESEMISDUALMSKSPECATEST",
                    "LITENVFRESEMISDUALMSKVCOLOR",
                    "LITENVFRESEMISDUALMSKVCOLORATEST",
                    "LITENVFRESEMISDUALMSKATEST",
                    "LITENVFRESEMISSPEC",
                    "LITENVFRESEMISSPECVCOLOR",
                    "LITENVFRESEMISSPECVCOLORATEST",
                    "LITENVFRESEMISSPECATEST",
                    "LITENVFRESEMISVCOLOR",
                    "LITENVFRESEMISVCOLORATEST",
                    "LITENVFRESEMISATEST",
                    "LITENVFRESDIFF",
                    "LITENVFRESDIFFDUALLMAP",
                    "LITENVFRESDIFFDUALLMAPSPEC",
                    "LITENVFRESDIFFDUALLMAPSPECVCOLOR",
                    "LITENVFRESDIFFDUALLMAPSPECVCOLORATEST",
                    "LITENVFRESDIFFDUALLMAPSPECATEST",
                    "LITENVFRESDIFFDUALLMAPVCOLOR",
                    "LITENVFRESDIFFDUALLMAPVCOLORATEST",
                    "LITENVFRESDIFFDUALLMAPATEST",
                    "LITENVFRESDIFFDUALMUL",
                    "LITENVFRESDIFFDUALMULSPEC",
                    "LITENVFRESDIFFDUALMULSPECVCOLOR",
                    "LITENVFRESDIFFDUALMULSPECVCOLORATEST",
                    "LITENVFRESDIFFDUALMULSPECATEST",
                    "LITENVFRESDIFFDUALMULVCOLOR",
                    "LITENVFRESDIFFDUALMULVCOLORATEST",
                    "LITENVFRESDIFFDUALMULATEST",
                    "LITENVFRESDIFFDUALADD",
                    "LITENVFRESDIFFDUALADDSPEC",
                    "LITENVFRESDIFFDUALADDSPECVCOLOR",
                    "LITENVFRESDIFFDUALADDSPECVCOLORATEST",
                    "LITENVFRESDIFFDUALADDSPECATEST",
                    "LITENVFRESDIFFDUALADDVCOLOR",
                    "LITENVFRESDIFFDUALADDVCOLORATEST",
                    "LITENVFRESDIFFDUALADDATEST",
                    "LITENVFRESDIFFDUALMSK",
                    "LITENVFRESDIFFDUALMSKSPEC",
                    "LITENVFRESDIFFDUALMSKSPECVCOLOR",
                    "LITENVFRESDIFFDUALMSKSPECVCOLORATEST",
                    "LITENVFRESDIFFDUALMSKSPECATEST",
                    "LITENVFRESDIFFDUALMSKVCOLOR",
                    "LITENVFRESDIFFDUALMSKVCOLORATEST",
                    "LITENVFRESDIFFDUALMSKATEST",
                    "LITENVFRESDIFFSPEC",
                    "LITENVFRESDIFFSPECVCOLOR",
                    "LITENVFRESDIFFSPECVCOLORATEST",
                    "LITENVFRESDIFFSPECATEST",
                    "LITENVFRESDIFFVCOLOR",
                    "LITENVFRESDIFFVCOLORATEST",
                    "LITENVFRESDIFFATEST",
                    "LITENVFRESDUALLMAP",
                    "LITENVFRESDUALLMAPSPEC",
                    "LITENVFRESDUALLMAPSPECVCOLOR",
                    "LITENVFRESDUALLMAPSPECVCOLORATEST",
                    "LITENVFRESDUALLMAPSPECATEST",
                    "LITENVFRESDUALLMAPVCOLOR",
                    "LITENVFRESDUALLMAPVCOLORATEST",
                    "LITENVFRESDUALLMAPATEST",
                    "LITENVFRESDUALMUL",
                    "LITENVFRESDUALMULSPEC",
                    "LITENVFRESDUALMULSPECVCOLOR",
                    "LITENVFRESDUALMULSPECVCOLORATEST",
                    "LITENVFRESDUALMULSPECATEST",
                    "LITENVFRESDUALMULVCOLOR",
                    "LITENVFRESDUALMULVCOLORATEST",
                    "LITENVFRESDUALMULATEST",
                    "LITENVFRESDUALADD",
                    "LITENVFRESDUALADDSPEC",
                    "LITENVFRESDUALADDSPECVCOLOR",
                    "LITENVFRESDUALADDSPECVCOLORATEST",
                    "LITENVFRESDUALADDSPECATEST",
                    "LITENVFRESDUALADDVCOLOR",
                    "LITENVFRESDUALADDVCOLORATEST",
                    "LITENVFRESDUALADDATEST",
                    "LITENVFRESDUALMSK",
                    "LITENVFRESDUALMSKSPEC",
                    "LITENVFRESDUALMSKSPECVCOLOR",
                    "LITENVFRESDUALMSKSPECVCOLORATEST",
                    "LITENVFRESDUALMSKSPECATEST",
                    "LITENVFRESDUALMSKVCOLOR",
                    "LITENVFRESDUALMSKVCOLORATEST",
                    "LITENVFRESDUALMSKATEST",
                    "LITENVFRESSPEC",
                    "LITENVFRESSPECVCOLOR",
                    "LITENVFRESSPECVCOLORATEST",
                    "LITENVFRESSPECATEST",
                    "LITENVFRESVCOLOR",
                    "LITENVFRESVCOLORATEST",
                    "LITENVFRESATEST",
                    "LITEMIS",
                    "LITEMISDIFF",
                    "LITEMISDIFFDUALLMAP",
                    "LITEMISDIFFDUALLMAPSPEC",
                    "LITEMISDIFFDUALLMAPSPECVCOLOR",
                    "LITEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "LITEMISDIFFDUALLMAPSPECATEST",
                    "LITEMISDIFFDUALLMAPVCOLOR",
                    "LITEMISDIFFDUALLMAPVCOLORATEST",
                    "LITEMISDIFFDUALLMAPATEST",
                    "LITEMISDIFFDUALMUL",
                    "LITEMISDIFFDUALMULSPEC",
                    "LITEMISDIFFDUALMULSPECVCOLOR",
                    "LITEMISDIFFDUALMULSPECVCOLORATEST",
                    "LITEMISDIFFDUALMULSPECATEST",
                    "LITEMISDIFFDUALMULVCOLOR",
                    "LITEMISDIFFDUALMULVCOLORATEST",
                    "LITEMISDIFFDUALMULATEST",
                    "LITEMISDIFFDUALADD",
                    "LITEMISDIFFDUALADDSPEC",
                    "LITEMISDIFFDUALADDSPECVCOLOR",
                    "LITEMISDIFFDUALADDSPECVCOLORATEST",
                    "LITEMISDIFFDUALADDSPECATEST",
                    "LITEMISDIFFDUALADDVCOLOR",
                    "LITEMISDIFFDUALADDVCOLORATEST",
                    "LITEMISDIFFDUALADDATEST",
                    "LITEMISDIFFDUALMSK",
                    "LITEMISDIFFDUALMSKSPEC",
                    "LITEMISDIFFDUALMSKSPECVCOLOR",
                    "LITEMISDIFFDUALMSKSPECVCOLORATEST",
                    "LITEMISDIFFDUALMSKSPECATEST",
                    "LITEMISDIFFDUALMSKVCOLOR",
                    "LITEMISDIFFDUALMSKVCOLORATEST",
                    "LITEMISDIFFDUALMSKATEST",
                    "LITEMISDIFFSPEC",
                    "LITEMISDIFFSPECVCOLOR",
                    "LITEMISDIFFSPECVCOLORATEST",
                    "LITEMISDIFFSPECATEST",
                    "LITEMISDIFFVCOLOR",
                    "LITEMISDIFFVCOLORATEST",
                    "LITEMISDIFFATEST",
                    "LITEMISDUALLMAP",
                    "LITEMISDUALLMAPSPEC",
                    "LITEMISDUALLMAPSPECVCOLOR",
                    "LITEMISDUALLMAPSPECVCOLORATEST",
                    "LITEMISDUALLMAPSPECATEST",
                    "LITEMISDUALLMAPVCOLOR",
                    "LITEMISDUALLMAPVCOLORATEST",
                    "LITEMISDUALLMAPATEST",
                    "LITEMISDUALMUL",
                    "LITEMISDUALMULSPEC",
                    "LITEMISDUALMULSPECVCOLOR",
                    "LITEMISDUALMULSPECVCOLORATEST",
                    "LITEMISDUALMULSPECATEST",
                    "LITEMISDUALMULVCOLOR",
                    "LITEMISDUALMULVCOLORATEST",
                    "LITEMISDUALMULATEST",
                    "LITEMISDUALADD",
                    "LITEMISDUALADDSPEC",
                    "LITEMISDUALADDSPECVCOLOR",
                    "LITEMISDUALADDSPECVCOLORATEST",
                    "LITEMISDUALADDSPECATEST",
                    "LITEMISDUALADDVCOLOR",
                    "LITEMISDUALADDVCOLORATEST",
                    "LITEMISDUALADDATEST",
                    "LITEMISDUALMSK",
                    "LITEMISDUALMSKSPEC",
                    "LITEMISDUALMSKSPECVCOLOR",
                    "LITEMISDUALMSKSPECVCOLORATEST",
                    "LITEMISDUALMSKSPECATEST",
                    "LITEMISDUALMSKVCOLOR",
                    "LITEMISDUALMSKVCOLORATEST",
                    "LITEMISDUALMSKATEST",
                    "LITEMISSPEC",
                    "LITEMISSPECVCOLOR",
                    "LITEMISSPECVCOLORATEST",
                    "LITEMISSPECATEST",
                    "LITEMISVCOLOR",
                    "LITEMISVCOLORATEST",
                    "LITEMISATEST",
                    "LITDIFF",
                    "LITDIFFDUALLMAP",
                    "LITDIFFDUALLMAPSPEC",
                    "LITDIFFDUALLMAPSPECVCOLOR",
                    "LITDIFFDUALLMAPSPECVCOLORATEST",
                    "LITDIFFDUALLMAPSPECATEST",
                    "LITDIFFDUALLMAPVCOLOR",
                    "LITDIFFDUALLMAPVCOLORATEST",
                    "LITDIFFDUALLMAPATEST",
                    "LITDIFFDUALMUL",
                    "LITDIFFDUALMULSPEC",
                    "LITDIFFDUALMULSPECVCOLOR",
                    "LITDIFFDUALMULSPECVCOLORATEST",
                    "LITDIFFDUALMULSPECATEST",
                    "LITDIFFDUALMULVCOLOR",
                    "LITDIFFDUALMULVCOLORATEST",
                    "LITDIFFDUALMULATEST",
                    "LITDIFFDUALADD",
                    "LITDIFFDUALADDSPEC",
                    "LITDIFFDUALADDSPECVCOLOR",
                    "LITDIFFDUALADDSPECVCOLORATEST",
                    "LITDIFFDUALADDSPECATEST",
                    "LITDIFFDUALADDVCOLOR",
                    "LITDIFFDUALADDVCOLORATEST",
                    "LITDIFFDUALADDATEST",
                    "LITDIFFDUALMSK",
                    "LITDIFFDUALMSKSPEC",
                    "LITDIFFDUALMSKSPECVCOLOR",
                    "LITDIFFDUALMSKSPECVCOLORATEST",
                    "LITDIFFDUALMSKSPECATEST",
                    "LITDIFFDUALMSKVCOLOR",
                    "LITDIFFDUALMSKVCOLORATEST",
                    "LITDIFFDUALMSKATEST",
                    "LITDIFFSPEC",
                    "LITDIFFSPECVCOLOR",
                    "LITDIFFSPECVCOLORATEST",
                    "LITDIFFSPECATEST",
                    "LITDIFFVCOLOR",
                    "LITDIFFVCOLORATEST",
                    "LITDIFFATEST",
                    "LITDUALLMAP",
                    "LITDUALLMAPSPEC",
                    "LITDUALLMAPSPECVCOLOR",
                    "LITDUALLMAPSPECVCOLORATEST",
                    "LITDUALLMAPSPECATEST",
                    "LITDUALLMAPVCOLOR",
                    "LITDUALLMAPVCOLORATEST",
                    "LITDUALLMAPATEST",
                    "LITDUALMUL",
                    "LITDUALMULSPEC",
                    "LITDUALMULSPECVCOLOR",
                    "LITDUALMULSPECVCOLORATEST",
                    "LITDUALMULSPECATEST",
                    "LITDUALMULVCOLOR",
                    "LITDUALMULVCOLORATEST",
                    "LITDUALMULATEST",
                    "LITDUALADD",
                    "LITDUALADDSPEC",
                    "LITDUALADDSPECVCOLOR",
                    "LITDUALADDSPECVCOLORATEST",
                    "LITDUALADDSPECATEST",
                    "LITDUALADDVCOLOR",
                    "LITDUALADDVCOLORATEST",
                    "LITDUALADDATEST",
                    "LITDUALMSK",
                    "LITDUALMSKSPEC",
                    "LITDUALMSKSPECVCOLOR",
                    "LITDUALMSKSPECVCOLORATEST",
                    "LITDUALMSKSPECATEST",
                    "LITDUALMSKVCOLOR",
                    "LITDUALMSKVCOLORATEST",
                    "LITDUALMSKATEST",
                    "LITSPEC",
                    "LITSPECVCOLOR",
                    "LITSPECVCOLORATEST",
                    "LITSPECATEST",
                    "LITVCOLOR",
                    "LITVCOLORATEST",
                    "LITATEST",
                    "IBL",
                    "IBLENV",
                    "IBLENVEMIS",
                    "IBLENVEMISDIFF",
                    "IBLENVEMISDIFFDUALLMAP",
                    "IBLENVEMISDIFFDUALLMAPSPEC",
                    "IBLENVEMISDIFFDUALLMAPSPECVCOLOR",
                    "IBLENVEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "IBLENVEMISDIFFDUALLMAPSPECATEST",
                    "IBLENVEMISDIFFDUALLMAPVCOLOR",
                    "IBLENVEMISDIFFDUALLMAPVCOLORATEST",
                    "IBLENVEMISDIFFDUALLMAPATEST",
                    "IBLENVEMISDIFFDUALMUL",
                    "IBLENVEMISDIFFDUALMULSPEC",
                    "IBLENVEMISDIFFDUALMULSPECVCOLOR",
                    "IBLENVEMISDIFFDUALMULSPECVCOLORATEST",
                    "IBLENVEMISDIFFDUALMULSPECATEST",
                    "IBLENVEMISDIFFDUALMULVCOLOR",
                    "IBLENVEMISDIFFDUALMULVCOLORATEST",
                    "IBLENVEMISDIFFDUALMULATEST",
                    "IBLENVEMISDIFFDUALADD",
                    "IBLENVEMISDIFFDUALADDSPEC",
                    "IBLENVEMISDIFFDUALADDSPECVCOLOR",
                    "IBLENVEMISDIFFDUALADDSPECVCOLORATEST",
                    "IBLENVEMISDIFFDUALADDSPECATEST",
                    "IBLENVEMISDIFFDUALADDVCOLOR",
                    "IBLENVEMISDIFFDUALADDVCOLORATEST",
                    "IBLENVEMISDIFFDUALADDATEST",
                    "IBLENVEMISDIFFDUALMSK",
                    "IBLENVEMISDIFFDUALMSKSPEC",
                    "IBLENVEMISDIFFDUALMSKSPECVCOLOR",
                    "IBLENVEMISDIFFDUALMSKSPECVCOLORATEST",
                    "IBLENVEMISDIFFDUALMSKSPECATEST",
                    "IBLENVEMISDIFFDUALMSKVCOLOR",
                    "IBLENVEMISDIFFDUALMSKVCOLORATEST",
                    "IBLENVEMISDIFFDUALMSKATEST",
                    "IBLENVEMISDIFFSPEC",
                    "IBLENVEMISDIFFSPECVCOLOR",
                    "IBLENVEMISDIFFSPECVCOLORATEST",
                    "IBLENVEMISDIFFSPECATEST",
                    "IBLENVEMISDIFFVCOLOR",
                    "IBLENVEMISDIFFVCOLORATEST",
                    "IBLENVEMISDIFFATEST",
                    "IBLENVEMISDUALLMAP",
                    "IBLENVEMISDUALLMAPSPEC",
                    "IBLENVEMISDUALLMAPSPECVCOLOR",
                    "IBLENVEMISDUALLMAPSPECVCOLORATEST",
                    "IBLENVEMISDUALLMAPSPECATEST",
                    "IBLENVEMISDUALLMAPVCOLOR",
                    "IBLENVEMISDUALLMAPVCOLORATEST",
                    "IBLENVEMISDUALLMAPATEST",
                    "IBLENVEMISDUALMUL",
                    "IBLENVEMISDUALMULSPEC",
                    "IBLENVEMISDUALMULSPECVCOLOR",
                    "IBLENVEMISDUALMULSPECVCOLORATEST",
                    "IBLENVEMISDUALMULSPECATEST",
                    "IBLENVEMISDUALMULVCOLOR",
                    "IBLENVEMISDUALMULVCOLORATEST",
                    "IBLENVEMISDUALMULATEST",
                    "IBLENVEMISDUALADD",
                    "IBLENVEMISDUALADDSPEC",
                    "IBLENVEMISDUALADDSPECVCOLOR",
                    "IBLENVEMISDUALADDSPECVCOLORATEST",
                    "IBLENVEMISDUALADDSPECATEST",
                    "IBLENVEMISDUALADDVCOLOR",
                    "IBLENVEMISDUALADDVCOLORATEST",
                    "IBLENVEMISDUALADDATEST",
                    "IBLENVEMISDUALMSK",
                    "IBLENVEMISDUALMSKSPEC",
                    "IBLENVEMISDUALMSKSPECVCOLOR",
                    "IBLENVEMISDUALMSKSPECVCOLORATEST",
                    "IBLENVEMISDUALMSKSPECATEST",
                    "IBLENVEMISDUALMSKVCOLOR",
                    "IBLENVEMISDUALMSKVCOLORATEST",
                    "IBLENVEMISDUALMSKATEST",
                    "IBLENVEMISSPEC",
                    "IBLENVEMISSPECVCOLOR",
                    "IBLENVEMISSPECVCOLORATEST",
                    "IBLENVEMISSPECATEST",
                    "IBLENVEMISVCOLOR",
                    "IBLENVEMISVCOLORATEST",
                    "IBLENVEMISATEST",
                    "IBLENVDIFF",
                    "IBLENVDIFFDUALLMAP",
                    "IBLENVDIFFDUALLMAPSPEC",
                    "IBLENVDIFFDUALLMAPSPECVCOLOR",
                    "IBLENVDIFFDUALLMAPSPECVCOLORATEST",
                    "IBLENVDIFFDUALLMAPSPECATEST",
                    "IBLENVDIFFDUALLMAPVCOLOR",
                    "IBLENVDIFFDUALLMAPVCOLORATEST",
                    "IBLENVDIFFDUALLMAPATEST",
                    "IBLENVDIFFDUALMUL",
                    "IBLENVDIFFDUALMULSPEC",
                    "IBLENVDIFFDUALMULSPECVCOLOR",
                    "IBLENVDIFFDUALMULSPECVCOLORATEST",
                    "IBLENVDIFFDUALMULSPECATEST",
                    "IBLENVDIFFDUALMULVCOLOR",
                    "IBLENVDIFFDUALMULVCOLORATEST",
                    "IBLENVDIFFDUALMULATEST",
                    "IBLENVDIFFDUALADD",
                    "IBLENVDIFFDUALADDSPEC",
                    "IBLENVDIFFDUALADDSPECVCOLOR",
                    "IBLENVDIFFDUALADDSPECVCOLORATEST",
                    "IBLENVDIFFDUALADDSPECATEST",
                    "IBLENVDIFFDUALADDVCOLOR",
                    "IBLENVDIFFDUALADDVCOLORATEST",
                    "IBLENVDIFFDUALADDATEST",
                    "IBLENVDIFFDUALMSK",
                    "IBLENVDIFFDUALMSKSPEC",
                    "IBLENVDIFFDUALMSKSPECVCOLOR",
                    "IBLENVDIFFDUALMSKSPECVCOLORATEST",
                    "IBLENVDIFFDUALMSKSPECATEST",
                    "IBLENVDIFFDUALMSKVCOLOR",
                    "IBLENVDIFFDUALMSKVCOLORATEST",
                    "IBLENVDIFFDUALMSKATEST",
                    "IBLENVDIFFSPEC",
                    "IBLENVDIFFSPECVCOLOR",
                    "IBLENVDIFFSPECVCOLORATEST",
                    "IBLENVDIFFSPECATEST",
                    "IBLENVDIFFVCOLOR",
                    "IBLENVDIFFVCOLORATEST",
                    "IBLENVDIFFATEST",
                    "IBLENVDUALLMAP",
                    "IBLENVDUALLMAPSPEC",
                    "IBLENVDUALLMAPSPECVCOLOR",
                    "IBLENVDUALLMAPSPECVCOLORATEST",
                    "IBLENVDUALLMAPSPECATEST",
                    "IBLENVDUALLMAPVCOLOR",
                    "IBLENVDUALLMAPVCOLORATEST",
                    "IBLENVDUALLMAPATEST",
                    "IBLENVDUALMUL",
                    "IBLENVDUALMULSPEC",
                    "IBLENVDUALMULSPECVCOLOR",
                    "IBLENVDUALMULSPECVCOLORATEST",
                    "IBLENVDUALMULSPECATEST",
                    "IBLENVDUALMULVCOLOR",
                    "IBLENVDUALMULVCOLORATEST",
                    "IBLENVDUALMULATEST",
                    "IBLENVDUALADD",
                    "IBLENVDUALADDSPEC",
                    "IBLENVDUALADDSPECVCOLOR",
                    "IBLENVDUALADDSPECVCOLORATEST",
                    "IBLENVDUALADDSPECATEST",
                    "IBLENVDUALADDVCOLOR",
                    "IBLENVDUALADDVCOLORATEST",
                    "IBLENVDUALADDATEST",
                    "IBLENVDUALMSK",
                    "IBLENVDUALMSKSPEC",
                    "IBLENVDUALMSKSPECVCOLOR",
                    "IBLENVDUALMSKSPECVCOLORATEST",
                    "IBLENVDUALMSKSPECATEST",
                    "IBLENVDUALMSKVCOLOR",
                    "IBLENVDUALMSKVCOLORATEST",
                    "IBLENVDUALMSKATEST",
                    "IBLENVSPEC",
                    "IBLENVSPECVCOLOR",
                    "IBLENVSPECVCOLORATEST",
                    "IBLENVSPECATEST",
                    "IBLENVVCOLOR",
                    "IBLENVVCOLORATEST",
                    "IBLENVATEST",
                    "IBLENVFRES",
                    "IBLENVFRESEMIS",
                    "IBLENVFRESEMISDIFF",
                    "IBLENVFRESEMISDIFFDUALLMAP",
                    "IBLENVFRESEMISDIFFDUALLMAPSPEC",
                    "IBLENVFRESEMISDIFFDUALLMAPSPECVCOLOR",
                    "IBLENVFRESEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "IBLENVFRESEMISDIFFDUALLMAPSPECATEST",
                    "IBLENVFRESEMISDIFFDUALLMAPVCOLOR",
                    "IBLENVFRESEMISDIFFDUALLMAPVCOLORATEST",
                    "IBLENVFRESEMISDIFFDUALLMAPATEST",
                    "IBLENVFRESEMISDIFFDUALMUL",
                    "IBLENVFRESEMISDIFFDUALMULSPEC",
                    "IBLENVFRESEMISDIFFDUALMULSPECVCOLOR",
                    "IBLENVFRESEMISDIFFDUALMULSPECVCOLORATEST",
                    "IBLENVFRESEMISDIFFDUALMULSPECATEST",
                    "IBLENVFRESEMISDIFFDUALMULVCOLOR",
                    "IBLENVFRESEMISDIFFDUALMULVCOLORATEST",
                    "IBLENVFRESEMISDIFFDUALMULATEST",
                    "IBLENVFRESEMISDIFFDUALADD",
                    "IBLENVFRESEMISDIFFDUALADDSPEC",
                    "IBLENVFRESEMISDIFFDUALADDSPECVCOLOR",
                    "IBLENVFRESEMISDIFFDUALADDSPECVCOLORATEST",
                    "IBLENVFRESEMISDIFFDUALADDSPECATEST",
                    "IBLENVFRESEMISDIFFDUALADDVCOLOR",
                    "IBLENVFRESEMISDIFFDUALADDVCOLORATEST",
                    "IBLENVFRESEMISDIFFDUALADDATEST",
                    "IBLENVFRESEMISDIFFDUALMSK",
                    "IBLENVFRESEMISDIFFDUALMSKSPEC",
                    "IBLENVFRESEMISDIFFDUALMSKSPECVCOLOR",
                    "IBLENVFRESEMISDIFFDUALMSKSPECVCOLORATEST",
                    "IBLENVFRESEMISDIFFDUALMSKSPECATEST",
                    "IBLENVFRESEMISDIFFDUALMSKVCOLOR",
                    "IBLENVFRESEMISDIFFDUALMSKVCOLORATEST",
                    "IBLENVFRESEMISDIFFDUALMSKATEST",
                    "IBLENVFRESEMISDIFFSPEC",
                    "IBLENVFRESEMISDIFFSPECVCOLOR",
                    "IBLENVFRESEMISDIFFSPECVCOLORATEST",
                    "IBLENVFRESEMISDIFFSPECATEST",
                    "IBLENVFRESEMISDIFFVCOLOR",
                    "IBLENVFRESEMISDIFFVCOLORATEST",
                    "IBLENVFRESEMISDIFFATEST",
                    "IBLENVFRESEMISDUALLMAP",
                    "IBLENVFRESEMISDUALLMAPSPEC",
                    "IBLENVFRESEMISDUALLMAPSPECVCOLOR",
                    "IBLENVFRESEMISDUALLMAPSPECVCOLORATEST",
                    "IBLENVFRESEMISDUALLMAPSPECATEST",
                    "IBLENVFRESEMISDUALLMAPVCOLOR",
                    "IBLENVFRESEMISDUALLMAPVCOLORATEST",
                    "IBLENVFRESEMISDUALLMAPATEST",
                    "IBLENVFRESEMISDUALMUL",
                    "IBLENVFRESEMISDUALMULSPEC",
                    "IBLENVFRESEMISDUALMULSPECVCOLOR",
                    "IBLENVFRESEMISDUALMULSPECVCOLORATEST",
                    "IBLENVFRESEMISDUALMULSPECATEST",
                    "IBLENVFRESEMISDUALMULVCOLOR",
                    "IBLENVFRESEMISDUALMULVCOLORATEST",
                    "IBLENVFRESEMISDUALMULATEST",
                    "IBLENVFRESEMISDUALADD",
                    "IBLENVFRESEMISDUALADDSPEC",
                    "IBLENVFRESEMISDUALADDSPECVCOLOR",
                    "IBLENVFRESEMISDUALADDSPECVCOLORATEST",
                    "IBLENVFRESEMISDUALADDSPECATEST",
                    "IBLENVFRESEMISDUALADDVCOLOR",
                    "IBLENVFRESEMISDUALADDVCOLORATEST",
                    "IBLENVFRESEMISDUALADDATEST",
                    "IBLENVFRESEMISDUALMSK",
                    "IBLENVFRESEMISDUALMSKSPEC",
                    "IBLENVFRESEMISDUALMSKSPECVCOLOR",
                    "IBLENVFRESEMISDUALMSKSPECVCOLORATEST",
                    "IBLENVFRESEMISDUALMSKSPECATEST",
                    "IBLENVFRESEMISDUALMSKVCOLOR",
                    "IBLENVFRESEMISDUALMSKVCOLORATEST",
                    "IBLENVFRESEMISDUALMSKATEST",
                    "IBLENVFRESEMISSPEC",
                    "IBLENVFRESEMISSPECVCOLOR",
                    "IBLENVFRESEMISSPECVCOLORATEST",
                    "IBLENVFRESEMISSPECATEST",
                    "IBLENVFRESEMISVCOLOR",
                    "IBLENVFRESEMISVCOLORATEST",
                    "IBLENVFRESEMISATEST",
                    "IBLENVFRESDIFF",
                    "IBLENVFRESDIFFDUALLMAP",
                    "IBLENVFRESDIFFDUALLMAPSPEC",
                    "IBLENVFRESDIFFDUALLMAPSPECVCOLOR",
                    "IBLENVFRESDIFFDUALLMAPSPECVCOLORATEST",
                    "IBLENVFRESDIFFDUALLMAPSPECATEST",
                    "IBLENVFRESDIFFDUALLMAPVCOLOR",
                    "IBLENVFRESDIFFDUALLMAPVCOLORATEST",
                    "IBLENVFRESDIFFDUALLMAPATEST",
                    "IBLENVFRESDIFFDUALMUL",
                    "IBLENVFRESDIFFDUALMULSPEC",
                    "IBLENVFRESDIFFDUALMULSPECVCOLOR",
                    "IBLENVFRESDIFFDUALMULSPECVCOLORATEST",
                    "IBLENVFRESDIFFDUALMULSPECATEST",
                    "IBLENVFRESDIFFDUALMULVCOLOR",
                    "IBLENVFRESDIFFDUALMULVCOLORATEST",
                    "IBLENVFRESDIFFDUALMULATEST",
                    "IBLENVFRESDIFFDUALADD",
                    "IBLENVFRESDIFFDUALADDSPEC",
                    "IBLENVFRESDIFFDUALADDSPECVCOLOR",
                    "IBLENVFRESDIFFDUALADDSPECVCOLORATEST",
                    "IBLENVFRESDIFFDUALADDSPECATEST",
                    "IBLENVFRESDIFFDUALADDVCOLOR",
                    "IBLENVFRESDIFFDUALADDVCOLORATEST",
                    "IBLENVFRESDIFFDUALADDATEST",
                    "IBLENVFRESDIFFDUALMSK",
                    "IBLENVFRESDIFFDUALMSKSPEC",
                    "IBLENVFRESDIFFDUALMSKSPECVCOLOR",
                    "IBLENVFRESDIFFDUALMSKSPECVCOLORATEST",
                    "IBLENVFRESDIFFDUALMSKSPECATEST",
                    "IBLENVFRESDIFFDUALMSKVCOLOR",
                    "IBLENVFRESDIFFDUALMSKVCOLORATEST",
                    "IBLENVFRESDIFFDUALMSKATEST",
                    "IBLENVFRESDIFFSPEC",
                    "IBLENVFRESDIFFSPECVCOLOR",
                    "IBLENVFRESDIFFSPECVCOLORATEST",
                    "IBLENVFRESDIFFSPECATEST",
                    "IBLENVFRESDIFFVCOLOR",
                    "IBLENVFRESDIFFVCOLORATEST",
                    "IBLENVFRESDIFFATEST",
                    "IBLENVFRESDUALLMAP",
                    "IBLENVFRESDUALLMAPSPEC",
                    "IBLENVFRESDUALLMAPSPECVCOLOR",
                    "IBLENVFRESDUALLMAPSPECVCOLORATEST",
                    "IBLENVFRESDUALLMAPSPECATEST",
                    "IBLENVFRESDUALLMAPVCOLOR",
                    "IBLENVFRESDUALLMAPVCOLORATEST",
                    "IBLENVFRESDUALLMAPATEST",
                    "IBLENVFRESDUALMUL",
                    "IBLENVFRESDUALMULSPEC",
                    "IBLENVFRESDUALMULSPECVCOLOR",
                    "IBLENVFRESDUALMULSPECVCOLORATEST",
                    "IBLENVFRESDUALMULSPECATEST",
                    "IBLENVFRESDUALMULVCOLOR",
                    "IBLENVFRESDUALMULVCOLORATEST",
                    "IBLENVFRESDUALMULATEST",
                    "IBLENVFRESDUALADD",
                    "IBLENVFRESDUALADDSPEC",
                    "IBLENVFRESDUALADDSPECVCOLOR",
                    "IBLENVFRESDUALADDSPECVCOLORATEST",
                    "IBLENVFRESDUALADDSPECATEST",
                    "IBLENVFRESDUALADDVCOLOR",
                    "IBLENVFRESDUALADDVCOLORATEST",
                    "IBLENVFRESDUALADDATEST",
                    "IBLENVFRESDUALMSK",
                    "IBLENVFRESDUALMSKSPEC",
                    "IBLENVFRESDUALMSKSPECVCOLOR",
                    "IBLENVFRESDUALMSKSPECVCOLORATEST",
                    "IBLENVFRESDUALMSKSPECATEST",
                    "IBLENVFRESDUALMSKVCOLOR",
                    "IBLENVFRESDUALMSKVCOLORATEST",
                    "IBLENVFRESDUALMSKATEST",
                    "IBLENVFRESSPEC",
                    "IBLENVFRESSPECVCOLOR",
                    "IBLENVFRESSPECVCOLORATEST",
                    "IBLENVFRESSPECATEST",
                    "IBLENVFRESVCOLOR",
                    "IBLENVFRESVCOLORATEST",
                    "IBLENVFRESATEST",
                    "IBLEMIS",
                    "IBLEMISDIFF",
                    "IBLEMISDIFFDUALLMAP",
                    "IBLEMISDIFFDUALLMAPSPEC",
                    "IBLEMISDIFFDUALLMAPSPECVCOLOR",
                    "IBLEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "IBLEMISDIFFDUALLMAPSPECATEST",
                    "IBLEMISDIFFDUALLMAPVCOLOR",
                    "IBLEMISDIFFDUALLMAPVCOLORATEST",
                    "IBLEMISDIFFDUALLMAPATEST",
                    "IBLEMISDIFFDUALMUL",
                    "IBLEMISDIFFDUALMULSPEC",
                    "IBLEMISDIFFDUALMULSPECVCOLOR",
                    "IBLEMISDIFFDUALMULSPECVCOLORATEST",
                    "IBLEMISDIFFDUALMULSPECATEST",
                    "IBLEMISDIFFDUALMULVCOLOR",
                    "IBLEMISDIFFDUALMULVCOLORATEST",
                    "IBLEMISDIFFDUALMULATEST",
                    "IBLEMISDIFFDUALADD",
                    "IBLEMISDIFFDUALADDSPEC",
                    "IBLEMISDIFFDUALADDSPECVCOLOR",
                    "IBLEMISDIFFDUALADDSPECVCOLORATEST",
                    "IBLEMISDIFFDUALADDSPECATEST",
                    "IBLEMISDIFFDUALADDVCOLOR",
                    "IBLEMISDIFFDUALADDVCOLORATEST",
                    "IBLEMISDIFFDUALADDATEST",
                    "IBLEMISDIFFDUALMSK",
                    "IBLEMISDIFFDUALMSKSPEC",
                    "IBLEMISDIFFDUALMSKSPECVCOLOR",
                    "IBLEMISDIFFDUALMSKSPECVCOLORATEST",
                    "IBLEMISDIFFDUALMSKSPECATEST",
                    "IBLEMISDIFFDUALMSKVCOLOR",
                    "IBLEMISDIFFDUALMSKVCOLORATEST",
                    "IBLEMISDIFFDUALMSKATEST",
                    "IBLEMISDIFFSPEC",
                    "IBLEMISDIFFSPECVCOLOR",
                    "IBLEMISDIFFSPECVCOLORATEST",
                    "IBLEMISDIFFSPECATEST",
                    "IBLEMISDIFFVCOLOR",
                    "IBLEMISDIFFVCOLORATEST",
                    "IBLEMISDIFFATEST",
                    "IBLEMISDUALLMAP",
                    "IBLEMISDUALLMAPSPEC",
                    "IBLEMISDUALLMAPSPECVCOLOR",
                    "IBLEMISDUALLMAPSPECVCOLORATEST",
                    "IBLEMISDUALLMAPSPECATEST",
                    "IBLEMISDUALLMAPVCOLOR",
                    "IBLEMISDUALLMAPVCOLORATEST",
                    "IBLEMISDUALLMAPATEST",
                    "IBLEMISDUALMUL",
                    "IBLEMISDUALMULSPEC",
                    "IBLEMISDUALMULSPECVCOLOR",
                    "IBLEMISDUALMULSPECVCOLORATEST",
                    "IBLEMISDUALMULSPECATEST",
                    "IBLEMISDUALMULVCOLOR",
                    "IBLEMISDUALMULVCOLORATEST",
                    "IBLEMISDUALMULATEST",
                    "IBLEMISDUALADD",
                    "IBLEMISDUALADDSPEC",
                    "IBLEMISDUALADDSPECVCOLOR",
                    "IBLEMISDUALADDSPECVCOLORATEST",
                    "IBLEMISDUALADDSPECATEST",
                    "IBLEMISDUALADDVCOLOR",
                    "IBLEMISDUALADDVCOLORATEST",
                    "IBLEMISDUALADDATEST",
                    "IBLEMISDUALMSK",
                    "IBLEMISDUALMSKSPEC",
                    "IBLEMISDUALMSKSPECVCOLOR",
                    "IBLEMISDUALMSKSPECVCOLORATEST",
                    "IBLEMISDUALMSKSPECATEST",
                    "IBLEMISDUALMSKVCOLOR",
                    "IBLEMISDUALMSKVCOLORATEST",
                    "IBLEMISDUALMSKATEST",
                    "IBLEMISSPEC",
                    "IBLEMISSPECVCOLOR",
                    "IBLEMISSPECVCOLORATEST",
                    "IBLEMISSPECATEST",
                    "IBLEMISVCOLOR",
                    "IBLEMISVCOLORATEST",
                    "IBLEMISATEST",
                    "IBLDIFF",
                    "IBLDIFFDUALLMAP",
                    "IBLDIFFDUALLMAPSPEC",
                    "IBLDIFFDUALLMAPSPECVCOLOR",
                    "IBLDIFFDUALLMAPSPECVCOLORATEST",
                    "IBLDIFFDUALLMAPSPECATEST",
                    "IBLDIFFDUALLMAPVCOLOR",
                    "IBLDIFFDUALLMAPVCOLORATEST",
                    "IBLDIFFDUALLMAPATEST",
                    "IBLDIFFDUALMUL",
                    "IBLDIFFDUALMULSPEC",
                    "IBLDIFFDUALMULSPECVCOLOR",
                    "IBLDIFFDUALMULSPECVCOLORATEST",
                    "IBLDIFFDUALMULSPECATEST",
                    "IBLDIFFDUALMULVCOLOR",
                    "IBLDIFFDUALMULVCOLORATEST",
                    "IBLDIFFDUALMULATEST",
                    "IBLDIFFDUALADD",
                    "IBLDIFFDUALADDSPEC",
                    "IBLDIFFDUALADDSPECVCOLOR",
                    "IBLDIFFDUALADDSPECVCOLORATEST",
                    "IBLDIFFDUALADDSPECATEST",
                    "IBLDIFFDUALADDVCOLOR",
                    "IBLDIFFDUALADDVCOLORATEST",
                    "IBLDIFFDUALADDATEST",
                    "IBLDIFFDUALMSK",
                    "IBLDIFFDUALMSKSPEC",
                    "IBLDIFFDUALMSKSPECVCOLOR",
                    "IBLDIFFDUALMSKSPECVCOLORATEST",
                    "IBLDIFFDUALMSKSPECATEST",
                    "IBLDIFFDUALMSKVCOLOR",
                    "IBLDIFFDUALMSKVCOLORATEST",
                    "IBLDIFFDUALMSKATEST",
                    "IBLDIFFSPEC",
                    "IBLDIFFSPECVCOLOR",
                    "IBLDIFFSPECVCOLORATEST",
                    "IBLDIFFSPECATEST",
                    "IBLDIFFVCOLOR",
                    "IBLDIFFVCOLORATEST",
                    "IBLDIFFATEST",
                    "IBLDUALLMAP",
                    "IBLDUALLMAPSPEC",
                    "IBLDUALLMAPSPECVCOLOR",
                    "IBLDUALLMAPSPECVCOLORATEST",
                    "IBLDUALLMAPSPECATEST",
                    "IBLDUALLMAPVCOLOR",
                    "IBLDUALLMAPVCOLORATEST",
                    "IBLDUALLMAPATEST",
                    "IBLDUALMUL",
                    "IBLDUALMULSPEC",
                    "IBLDUALMULSPECVCOLOR",
                    "IBLDUALMULSPECVCOLORATEST",
                    "IBLDUALMULSPECATEST",
                    "IBLDUALMULVCOLOR",
                    "IBLDUALMULVCOLORATEST",
                    "IBLDUALMULATEST",
                    "IBLDUALADD",
                    "IBLDUALADDSPEC",
                    "IBLDUALADDSPECVCOLOR",
                    "IBLDUALADDSPECVCOLORATEST",
                    "IBLDUALADDSPECATEST",
                    "IBLDUALADDVCOLOR",
                    "IBLDUALADDVCOLORATEST",
                    "IBLDUALADDATEST",
                    "IBLDUALMSK",
                    "IBLDUALMSKSPEC",
                    "IBLDUALMSKSPECVCOLOR",
                    "IBLDUALMSKSPECVCOLORATEST",
                    "IBLDUALMSKSPECATEST",
                    "IBLDUALMSKVCOLOR",
                    "IBLDUALMSKVCOLORATEST",
                    "IBLDUALMSKATEST",
                    "IBLSPEC",
                    "IBLSPECVCOLOR",
                    "IBLSPECVCOLORATEST",
                    "IBLSPECATEST",
                    "IBLVCOLOR",
                    "IBLVCOLORATEST",
                    "IBLATEST",
                    "ENV",
                    "ENVEMIS",
                    "ENVEMISDIFF",
                    "ENVEMISDIFFDUALLMAP",
                    "ENVEMISDIFFDUALLMAPSPEC",
                    "ENVEMISDIFFDUALLMAPSPECVCOLOR",
                    "ENVEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "ENVEMISDIFFDUALLMAPSPECATEST",
                    "ENVEMISDIFFDUALLMAPVCOLOR",
                    "ENVEMISDIFFDUALLMAPVCOLORATEST",
                    "ENVEMISDIFFDUALLMAPATEST",
                    "ENVEMISDIFFDUALMUL",
                    "ENVEMISDIFFDUALMULSPEC",
                    "ENVEMISDIFFDUALMULSPECVCOLOR",
                    "ENVEMISDIFFDUALMULSPECVCOLORATEST",
                    "ENVEMISDIFFDUALMULSPECATEST",
                    "ENVEMISDIFFDUALMULVCOLOR",
                    "ENVEMISDIFFDUALMULVCOLORATEST",
                    "ENVEMISDIFFDUALMULATEST",
                    "ENVEMISDIFFDUALADD",
                    "ENVEMISDIFFDUALADDSPEC",
                    "ENVEMISDIFFDUALADDSPECVCOLOR",
                    "ENVEMISDIFFDUALADDSPECVCOLORATEST",
                    "ENVEMISDIFFDUALADDSPECATEST",
                    "ENVEMISDIFFDUALADDVCOLOR",
                    "ENVEMISDIFFDUALADDVCOLORATEST",
                    "ENVEMISDIFFDUALADDATEST",
                    "ENVEMISDIFFDUALMSK",
                    "ENVEMISDIFFDUALMSKSPEC",
                    "ENVEMISDIFFDUALMSKSPECVCOLOR",
                    "ENVEMISDIFFDUALMSKSPECVCOLORATEST",
                    "ENVEMISDIFFDUALMSKSPECATEST",
                    "ENVEMISDIFFDUALMSKVCOLOR",
                    "ENVEMISDIFFDUALMSKVCOLORATEST",
                    "ENVEMISDIFFDUALMSKATEST",
                    "ENVEMISDIFFSPEC",
                    "ENVEMISDIFFSPECVCOLOR",
                    "ENVEMISDIFFSPECVCOLORATEST",
                    "ENVEMISDIFFSPECATEST",
                    "ENVEMISDIFFVCOLOR",
                    "ENVEMISDIFFVCOLORATEST",
                    "ENVEMISDIFFATEST",
                    "ENVEMISDUALLMAP",
                    "ENVEMISDUALLMAPSPEC",
                    "ENVEMISDUALLMAPSPECVCOLOR",
                    "ENVEMISDUALLMAPSPECVCOLORATEST",
                    "ENVEMISDUALLMAPSPECATEST",
                    "ENVEMISDUALLMAPVCOLOR",
                    "ENVEMISDUALLMAPVCOLORATEST",
                    "ENVEMISDUALLMAPATEST",
                    "ENVEMISDUALMUL",
                    "ENVEMISDUALMULSPEC",
                    "ENVEMISDUALMULSPECVCOLOR",
                    "ENVEMISDUALMULSPECVCOLORATEST",
                    "ENVEMISDUALMULSPECATEST",
                    "ENVEMISDUALMULVCOLOR",
                    "ENVEMISDUALMULVCOLORATEST",
                    "ENVEMISDUALMULATEST",
                    "ENVEMISDUALADD",
                    "ENVEMISDUALADDSPEC",
                    "ENVEMISDUALADDSPECVCOLOR",
                    "ENVEMISDUALADDSPECVCOLORATEST",
                    "ENVEMISDUALADDSPECATEST",
                    "ENVEMISDUALADDVCOLOR",
                    "ENVEMISDUALADDVCOLORATEST",
                    "ENVEMISDUALADDATEST",
                    "ENVEMISDUALMSK",
                    "ENVEMISDUALMSKSPEC",
                    "ENVEMISDUALMSKSPECVCOLOR",
                    "ENVEMISDUALMSKSPECVCOLORATEST",
                    "ENVEMISDUALMSKSPECATEST",
                    "ENVEMISDUALMSKVCOLOR",
                    "ENVEMISDUALMSKVCOLORATEST",
                    "ENVEMISDUALMSKATEST",
                    "ENVEMISSPEC",
                    "ENVEMISSPECVCOLOR",
                    "ENVEMISSPECVCOLORATEST",
                    "ENVEMISSPECATEST",
                    "ENVEMISVCOLOR",
                    "ENVEMISVCOLORATEST",
                    "ENVEMISATEST",
                    "ENVDIFF",
                    "ENVDIFFDUALLMAP",
                    "ENVDIFFDUALLMAPSPEC",
                    "ENVDIFFDUALLMAPSPECVCOLOR",
                    "ENVDIFFDUALLMAPSPECVCOLORATEST",
                    "ENVDIFFDUALLMAPSPECATEST",
                    "ENVDIFFDUALLMAPVCOLOR",
                    "ENVDIFFDUALLMAPVCOLORATEST",
                    "ENVDIFFDUALLMAPATEST",
                    "ENVDIFFDUALMUL",
                    "ENVDIFFDUALMULSPEC",
                    "ENVDIFFDUALMULSPECVCOLOR",
                    "ENVDIFFDUALMULSPECVCOLORATEST",
                    "ENVDIFFDUALMULSPECATEST",
                    "ENVDIFFDUALMULVCOLOR",
                    "ENVDIFFDUALMULVCOLORATEST",
                    "ENVDIFFDUALMULATEST",
                    "ENVDIFFDUALADD",
                    "ENVDIFFDUALADDSPEC",
                    "ENVDIFFDUALADDSPECVCOLOR",
                    "ENVDIFFDUALADDSPECVCOLORATEST",
                    "ENVDIFFDUALADDSPECATEST",
                    "ENVDIFFDUALADDVCOLOR",
                    "ENVDIFFDUALADDVCOLORATEST",
                    "ENVDIFFDUALADDATEST",
                    "ENVDIFFDUALMSK",
                    "ENVDIFFDUALMSKSPEC",
                    "ENVDIFFDUALMSKSPECVCOLOR",
                    "ENVDIFFDUALMSKSPECVCOLORATEST",
                    "ENVDIFFDUALMSKSPECATEST",
                    "ENVDIFFDUALMSKVCOLOR",
                    "ENVDIFFDUALMSKVCOLORATEST",
                    "ENVDIFFDUALMSKATEST",
                    "ENVDIFFSPEC",
                    "ENVDIFFSPECVCOLOR",
                    "ENVDIFFSPECVCOLORATEST",
                    "ENVDIFFSPECATEST",
                    "ENVDIFFVCOLOR",
                    "ENVDIFFVCOLORATEST",
                    "ENVDIFFATEST",
                    "ENVDUALLMAP",
                    "ENVDUALLMAPSPEC",
                    "ENVDUALLMAPSPECVCOLOR",
                    "ENVDUALLMAPSPECVCOLORATEST",
                    "ENVDUALLMAPSPECATEST",
                    "ENVDUALLMAPVCOLOR",
                    "ENVDUALLMAPVCOLORATEST",
                    "ENVDUALLMAPATEST",
                    "ENVDUALMUL",
                    "ENVDUALMULSPEC",
                    "ENVDUALMULSPECVCOLOR",
                    "ENVDUALMULSPECVCOLORATEST",
                    "ENVDUALMULSPECATEST",
                    "ENVDUALMULVCOLOR",
                    "ENVDUALMULVCOLORATEST",
                    "ENVDUALMULATEST",
                    "ENVDUALADD",
                    "ENVDUALADDSPEC",
                    "ENVDUALADDSPECVCOLOR",
                    "ENVDUALADDSPECVCOLORATEST",
                    "ENVDUALADDSPECATEST",
                    "ENVDUALADDVCOLOR",
                    "ENVDUALADDVCOLORATEST",
                    "ENVDUALADDATEST",
                    "ENVDUALMSK",
                    "ENVDUALMSKSPEC",
                    "ENVDUALMSKSPECVCOLOR",
                    "ENVDUALMSKSPECVCOLORATEST",
                    "ENVDUALMSKSPECATEST",
                    "ENVDUALMSKVCOLOR",
                    "ENVDUALMSKVCOLORATEST",
                    "ENVDUALMSKATEST",
                    "ENVSPEC",
                    "ENVSPECVCOLOR",
                    "ENVSPECVCOLORATEST",
                    "ENVSPECATEST",
                    "ENVVCOLOR",
                    "ENVVCOLORATEST",
                    "ENVATEST",
                    "ENVFRES",
                    "ENVFRESEMIS",
                    "ENVFRESEMISDIFF",
                    "ENVFRESEMISDIFFDUALLMAP",
                    "ENVFRESEMISDIFFDUALLMAPSPEC",
                    "ENVFRESEMISDIFFDUALLMAPSPECVCOLOR",
                    "ENVFRESEMISDIFFDUALLMAPSPECVCOLORATEST",
                    "ENVFRESEMISDIFFDUALLMAPSPECATEST",
                    "ENVFRESEMISDIFFDUALLMAPVCOLOR",
                    "ENVFRESEMISDIFFDUALLMAPVCOLORATEST",
                    "ENVFRESEMISDIFFDUALLMAPATEST",
                    "ENVFRESEMISDIFFDUALMUL",
                    "ENVFRESEMISDIFFDUALMULSPEC",
                    "ENVFRESEMISDIFFDUALMULSPECVCOLOR",
                    "ENVFRESEMISDIFFDUALMULSPECVCOLORATEST",
                    "ENVFRESEMISDIFFDUALMULSPECATEST",
                    "ENVFRESEMISDIFFDUALMULVCOLOR",
                    "ENVFRESEMISDIFFDUALMULVCOLORATEST",
                    "ENVFRESEMISDIFFDUALMULATEST",
                    "ENVFRESEMISDIFFDUALADD",
                    "ENVFRESEMISDIFFDUALADDSPEC",
                    "ENVFRESEMISDIFFDUALADDSPECVCOLOR",
                    "ENVFRESEMISDIFFDUALADDSPECVCOLORATEST",
                    "ENVFRESEMISDIFFDUALADDSPECATEST",
                    "ENVFRESEMISDIFFDUALADDVCOLOR",
                    "ENVFRESEMISDIFFDUALADDVCOLORATEST",
                    "ENVFRESEMISDIFFDUALADDATEST",
                    "ENVFRESEMISDIFFDUALMSK",
                    "ENVFRESEMISDIFFDUALMSKSPEC",
                    "ENVFRESEMISDIFFDUALMSKSPECVCOLOR",
                    "ENVFRESEMISDIFFDUALMSKSPECVCOLORATEST",
                    "ENVFRESEMISDIFFDUALMSKSPECATEST",
                    "ENVFRESEMISDIFFDUALMSKVCOLOR",
                    "ENVFRESEMISDIFFDUALMSKVCOLORATEST",
                    "ENVFRESEMISDIFFDUALMSKATEST",
                    "ENVFRESEMISDIFFSPEC",
                    "ENVFRESEMISDIFFSPECVCOLOR",
                    "ENVFRESEMISDIFFSPECVCOLORATEST",
                    "ENVFRESEMISDIFFSPECATEST",
                    "ENVFRESEMISDIFFVCOLOR",
                    "ENVFRESEMISDIFFVCOLORATEST",
                    "ENVFRESEMISDIFFATEST",
                    "ENVFRESEMISDUALLMAP",
                    "ENVFRESEMISDUALLMAPSPEC",
                    "ENVFRESEMISDUALLMAPSPECVCOLOR",
                    "ENVFRESEMISDUALLMAPSPECVCOLORATEST",
                    "ENVFRESEMISDUALLMAPSPECATEST",
                    "ENVFRESEMISDUALLMAPVCOLOR",
                    "ENVFRESEMISDUALLMAPVCOLORATEST",
                    "ENVFRESEMISDUALLMAPATEST",
                    "ENVFRESEMISDUALMUL",
                    "ENVFRESEMISDUALMULSPEC",
                    "ENVFRESEMISDUALMULSPECVCOLOR",
                    "ENVFRESEMISDUALMULSPECVCOLORATEST",
                    "ENVFRESEMISDUALMULSPECATEST",
                    "ENVFRESEMISDUALMULVCOLOR",
                    "ENVFRESEMISDUALMULVCOLORATEST",
                    "ENVFRESEMISDUALMULATEST",
                    "ENVFRESEMISDUALADD",
                    "ENVFRESEMISDUALADDSPEC",
                    "ENVFRESEMISDUALADDSPECVCOLOR",
                    "ENVFRESEMISDUALADDSPECVCOLORATEST",
                    "ENVFRESEMISDUALADDSPECATEST",
                    "ENVFRESEMISDUALADDVCOLOR",
                    "ENVFRESEMISDUALADDVCOLORATEST",
                    "ENVFRESEMISDUALADDATEST",
                    "ENVFRESEMISDUALMSK",
                    "ENVFRESEMISDUALMSKSPEC",
                    "ENVFRESEMISDUALMSKSPECVCOLOR",
                    "ENVFRESEMISDUALMSKSPECVCOLORATEST",
                    "ENVFRESEMISDUALMSKSPECATEST",
                    "ENVFRESEMISDUALMSKVCOLOR",
                    "ENVFRESEMISDUALMSKVCOLORATEST",
                    "ENVFRESEMISDUALMSKATEST",
                    "ENVFRESEMISSPEC",
                    "ENVFRESEMISSPECVCOLOR",
                    "ENVFRESEMISSPECVCOLORATEST",
                    "ENVFRESEMISSPECATEST",
                    "ENVFRESEMISVCOLOR",
                    "ENVFRESEMISVCOLORATEST",
                    "ENVFRESEMISATEST",
                    "ENVFRESDIFF",
                    "ENVFRESDIFFDUALLMAP",
                    "ENVFRESDIFFDUALLMAPSPEC",
                    "ENVFRESDIFFDUALLMAPSPECVCOLOR",
                    "ENVFRESDIFFDUALLMAPSPECVCOLORATEST",
                    "ENVFRESDIFFDUALLMAPSPECATEST",
                    "ENVFRESDIFFDUALLMAPVCOLOR",
                    "ENVFRESDIFFDUALLMAPVCOLORATEST",
                    "ENVFRESDIFFDUALLMAPATEST",
                    "ENVFRESDIFFDUALMUL",
                    "ENVFRESDIFFDUALMULSPEC",
                    "ENVFRESDIFFDUALMULSPECVCOLOR",
                    "ENVFRESDIFFDUALMULSPECVCOLORATEST",
                    "ENVFRESDIFFDUALMULSPECATEST",
                    "ENVFRESDIFFDUALMULVCOLOR",
                    "ENVFRESDIFFDUALMULVCOLORATEST",
                    "ENVFRESDIFFDUALMULATEST",
                    "ENVFRESDIFFDUALADD",
                    "ENVFRESDIFFDUALADDSPEC",
                    "ENVFRESDIFFDUALADDSPECVCOLOR",
                    "ENVFRESDIFFDUALADDSPECVCOLORATEST",
                    "ENVFRESDIFFDUALADDSPECATEST",
                    "ENVFRESDIFFDUALADDVCOLOR",
                    "ENVFRESDIFFDUALADDVCOLORATEST",
                    "ENVFRESDIFFDUALADDATEST",
                    "ENVFRESDIFFDUALMSK",
                    "ENVFRESDIFFDUALMSKSPEC",
                    "ENVFRESDIFFDUALMSKSPECVCOLOR",
                    "ENVFRESDIFFDUALMSKSPECVCOLORATEST",
                    "ENVFRESDIFFDUALMSKSPECATEST",
                    "ENVFRESDIFFDUALMSKVCOLOR",
                    "ENVFRESDIFFDUALMSKVCOLORATEST",
                    "ENVFRESDIFFDUALMSKATEST",
                    "ENVFRESDIFFSPEC",
                    "ENVFRESDIFFSPECVCOLOR",
                    "ENVFRESDIFFSPECVCOLORATEST",
                    "ENVFRESDIFFSPECATEST",
                    "ENVFRESDIFFVCOLOR",
                    "ENVFRESDIFFVCOLORATEST",
                    "ENVFRESDIFFATEST",
                    "ENVFRESDUALLMAP",
                    "ENVFRESDUALLMAPSPEC",
                    "ENVFRESDUALLMAPSPECVCOLOR",
                    "ENVFRESDUALLMAPSPECVCOLORATEST",
                    "ENVFRESDUALLMAPSPECATEST",
                    "ENVFRESDUALLMAPVCOLOR",
                    "ENVFRESDUALLMAPVCOLORATEST",
                    "ENVFRESDUALLMAPATEST",
                    "ENVFRESDUALMUL",
                    "ENVFRESDUALMULSPEC",
                    "ENVFRESDUALMULSPECVCOLOR",
                    "ENVFRESDUALMULSPECVCOLORATEST",
                    "ENVFRESDUALMULSPECATEST",
                    "ENVFRESDUALMULVCOLOR",
                    "ENVFRESDUALMULVCOLORATEST",
                    "ENVFRESDUALMULATEST",
                    "ENVFRESDUALADD",
                    "ENVFRESDUALADDSPEC",
                    "ENVFRESDUALADDSPECVCOLOR",
                    "ENVFRESDUALADDSPECVCOLORATEST",
                    "ENVFRESDUALADDSPECATEST",
                    "ENVFRESDUALADDVCOLOR",
                    "ENVFRESDUALADDVCOLORATEST",
                    "ENVFRESDUALADDATEST",
                    "ENVFRESDUALMSK",
                    "ENVFRESDUALMSKSPEC",
                    "ENVFRESDUALMSKSPECVCOLOR",
                    "ENVFRESDUALMSKSPECVCOLORATEST",
                    "ENVFRESDUALMSKSPECATEST",
                    "ENVFRESDUALMSKVCOLOR",
                    "ENVFRESDUALMSKVCOLORATEST",
                    "ENVFRESDUALMSKATEST",
                    "ENVFRESSPEC",
                    "ENVFRESSPECVCOLOR",
                    "ENVFRESSPECVCOLORATEST",
                    "ENVFRESSPECATEST",
                    "ENVFRESVCOLOR",
                    "ENVFRESVCOLORATEST",
                    "ENVFRESATEST",
                    "EMIS",
                    "EMISDIFF",
                    "EMISDIFFDUALLMAP",
                    "EMISDIFFDUALLMAPSPEC",
                    "EMISDIFFDUALLMAPSPECVCOLOR",
                    "EMISDIFFDUALLMAPSPECVCOLORATEST",
                    "EMISDIFFDUALLMAPSPECATEST",
                    "EMISDIFFDUALLMAPVCOLOR",
                    "EMISDIFFDUALLMAPVCOLORATEST",
                    "EMISDIFFDUALLMAPATEST",
                    "EMISDIFFDUALMUL",
                    "EMISDIFFDUALMULSPEC",
                    "EMISDIFFDUALMULSPECVCOLOR",
                    "EMISDIFFDUALMULSPECVCOLORATEST",
                    "EMISDIFFDUALMULSPECATEST",
                    "EMISDIFFDUALMULVCOLOR",
                    "EMISDIFFDUALMULVCOLORATEST",
                    "EMISDIFFDUALMULATEST",
                    "EMISDIFFDUALADD",
                    "EMISDIFFDUALADDSPEC",
                    "EMISDIFFDUALADDSPECVCOLOR",
                    "EMISDIFFDUALADDSPECVCOLORATEST",
                    "EMISDIFFDUALADDSPECATEST",
                    "EMISDIFFDUALADDVCOLOR",
                    "EMISDIFFDUALADDVCOLORATEST",
                    "EMISDIFFDUALADDATEST",
                    "EMISDIFFDUALMSK",
                    "EMISDIFFDUALMSKSPEC",
                    "EMISDIFFDUALMSKSPECVCOLOR",
                    "EMISDIFFDUALMSKSPECVCOLORATEST",
                    "EMISDIFFDUALMSKSPECATEST",
                    "EMISDIFFDUALMSKVCOLOR",
                    "EMISDIFFDUALMSKVCOLORATEST",
                    "EMISDIFFDUALMSKATEST",
                    "EMISDIFFSPEC",
                    "EMISDIFFSPECVCOLOR",
                    "EMISDIFFSPECVCOLORATEST",
                    "EMISDIFFSPECATEST",
                    "EMISDIFFVCOLOR",
                    "EMISDIFFVCOLORATEST",
                    "EMISDIFFATEST",
                    "EMISDUALLMAP",
                    "EMISDUALLMAPSPEC",
                    "EMISDUALLMAPSPECVCOLOR",
                    "EMISDUALLMAPSPECVCOLORATEST",
                    "EMISDUALLMAPSPECATEST",
                    "EMISDUALLMAPVCOLOR",
                    "EMISDUALLMAPVCOLORATEST",
                    "EMISDUALLMAPATEST",
                    "EMISDUALMUL",
                    "EMISDUALMULSPEC",
                    "EMISDUALMULSPECVCOLOR",
                    "EMISDUALMULSPECVCOLORATEST",
                    "EMISDUALMULSPECATEST",
                    "EMISDUALMULVCOLOR",
                    "EMISDUALMULVCOLORATEST",
                    "EMISDUALMULATEST",
                    "EMISDUALADD",
                    "EMISDUALADDSPEC",
                    "EMISDUALADDSPECVCOLOR",
                    "EMISDUALADDSPECVCOLORATEST",
                    "EMISDUALADDSPECATEST",
                    "EMISDUALADDVCOLOR",
                    "EMISDUALADDVCOLORATEST",
                    "EMISDUALADDATEST",
                    "EMISDUALMSK",
                    "EMISDUALMSKSPEC",
                    "EMISDUALMSKSPECVCOLOR",
                    "EMISDUALMSKSPECVCOLORATEST",
                    "EMISDUALMSKSPECATEST",
                    "EMISDUALMSKVCOLOR",
                    "EMISDUALMSKVCOLORATEST",
                    "EMISDUALMSKATEST",
                    "EMISSPEC",
                    "EMISSPECVCOLOR",
                    "EMISSPECVCOLORATEST",
                    "EMISSPECATEST",
                    "EMISVCOLOR",
                    "EMISVCOLORATEST",
                    "EMISATEST",
                    "DIFF",
                    "DIFFDUALLMAP",
                    "DIFFDUALLMAPSPEC",
                    "DIFFDUALLMAPSPECVCOLOR",
                    "DIFFDUALLMAPSPECVCOLORATEST",
                    "DIFFDUALLMAPSPECATEST",
                    "DIFFDUALLMAPVCOLOR",
                    "DIFFDUALLMAPVCOLORATEST",
                    "DIFFDUALLMAPATEST",
                    "DIFFDUALMUL",
                    "DIFFDUALMULSPEC",
                    "DIFFDUALMULSPECVCOLOR",
                    "DIFFDUALMULSPECVCOLORATEST",
                    "DIFFDUALMULSPECATEST",
                    "DIFFDUALMULVCOLOR",
                    "DIFFDUALMULVCOLORATEST",
                    "DIFFDUALMULATEST",
                    "DIFFDUALADD",
                    "DIFFDUALADDSPEC",
                    "DIFFDUALADDSPECVCOLOR",
                    "DIFFDUALADDSPECVCOLORATEST",
                    "DIFFDUALADDSPECATEST",
                    "DIFFDUALADDVCOLOR",
                    "DIFFDUALADDVCOLORATEST",
                    "DIFFDUALADDATEST",
                    "DIFFDUALMSK",
                    "DIFFDUALMSKSPEC",
                    "DIFFDUALMSKSPECVCOLOR",
                    "DIFFDUALMSKSPECVCOLORATEST",
                    "DIFFDUALMSKSPECATEST",
                    "DIFFDUALMSKVCOLOR",
                    "DIFFDUALMSKVCOLORATEST",
                    "DIFFDUALMSKATEST",
                    "DIFFSPEC",
                    "DIFFSPECVCOLOR",
                    "DIFFSPECVCOLORATEST",
                    "DIFFSPECATEST",
                    "DIFFVCOLOR",
                    "DIFFVCOLORATEST",
                    "DIFFATEST",
                    "DUALLMAP",
                    "DUALLMAPSPEC",
                    "DUALLMAPSPECVCOLOR",
                    "DUALLMAPSPECVCOLORATEST",
                    "DUALLMAPSPECATEST",
                    "DUALLMAPVCOLOR",
                    "DUALLMAPVCOLORATEST",
                    "DUALLMAPATEST",
                    "DUALMUL",
                    "DUALMULSPEC",
                    "DUALMULSPECVCOLOR",
                    "DUALMULSPECVCOLORATEST",
                    "DUALMULSPECATEST",
                    "DUALMULVCOLOR",
                    "DUALMULVCOLORATEST",
                    "DUALMULATEST",
                    "DUALADD",
                    "DUALADDSPEC",
                    "DUALADDSPECVCOLOR",
                    "DUALADDSPECVCOLORATEST",
                    "DUALADDSPECATEST",
                    "DUALADDVCOLOR",
                    "DUALADDVCOLORATEST",
                    "DUALADDATEST",
                    "DUALMSK",
                    "DUALMSKSPEC",
                    "DUALMSKSPECVCOLOR",
                    "DUALMSKSPECVCOLORATEST",
                    "DUALMSKSPECATEST",
                    "DUALMSKVCOLOR",
                    "DUALMSKVCOLORATEST",
                    "DUALMSKATEST",
                    "SPEC",
                    "SPECVCOLOR",
                    "SPECVCOLORATEST",
                    "SPECATEST",
                    "VCOLOR",
                    "VCOLORATEST",
                    "ATEST",

                    "G",
                    "GN",
                    "GD",
                    "GDN",
                    "GR",
                    "GRN",

                    "Video",
                };

        #endregion

        #region Properties

        /// <summary>
        /// Gets the current technique.
        /// </summary>
        /// <value>
        /// The current technique.
        /// </value>
        [DontRenderProperty]
        public override string CurrentTechnique
        {
            get
            {
                string technique = string.Empty;
                int index = 0;

                if (this.DeferredLightingPass == DeferredLightingPass.GBufferPass)
                {
                    technique += "G";

                    if (this.graphicsDevice != null)
                    {
                        if (this.graphicsDevice.RenderTargets.IsDepthAsTextureSupported)
                        {
                            technique += "D";
                        }
                        else if (this.graphicsDevice.RenderTargets.IsMRTsupported)
                        {
                            technique += "R";
                        }
                    }

                    if (this.normal != null)
                    {
                        technique += "N";
                    }
                }
                else
                {
                    if (this.LightingEnabled)
                    {
                        technique += "LIT";
                    }

                    if (this.ibl != null)
                    {
                        technique += "IBL";
                    }

                    if (this.environmentTexture != null)
                    {
                        technique += "ENV";

                        if (this.FresnelTermEnabled)
                        {
                            technique += "FRES";
                        }
                    }

                    if (this.emissive != null)
                    {
                        technique += "EMIS";
                    }

                    if (this.diffuse1 != null)
                    {
                        technique += "DIFF";
                    }

                    if (this.diffuse2 != null)
                    {
                        technique += "DUAL";

                        switch (this.EffectMode)
                        {
                            case DualTextureMode.Lightmap:
                                technique += "LMAP";
                                break;
                            case DualTextureMode.Multiplicative:
                                technique += "MUL";
                                break;
                            case DualTextureMode.Additive:
                                technique += "ADD";
                                break;
                            case DualTextureMode.Mask:
                                technique += "MSK";
                                break;
                        }
                    }

                    if (this.specular != null)
                    {
                        technique += "SPEC";
                    }

                    if (this.VertexColorEnable)
                    {
                        technique += "VCOLOR";
                    }

                    if (this.ReferenceAlpha > 0.0f)
                    {
                        technique += "ATEST";
                    }
                }

#if ANDROID
                if (this.VideoTexture != null)
                {
                    technique = "Video";
                }
#endif

                for (int i = 0; i < s.Length; i++)
                {
                    if (s[i] == technique)
                    {
                        index = i;
                        break;
                    }
                }

                ShaderTechnique seletedTechnique = techniques[index];

                // Lazy initialization
                if (!seletedTechnique.IsInitialized)
                {
                    if (this.DeferredLightingPass == DeferredLightingPass.GBufferPass)
                    {
                        this.Parameters = this.gbufferShaderParameters;
                    }
                    else
                    {
                        this.Parameters = this.shaderParameters;
                    }

                    seletedTechnique.Initialize(this);
                }

                return seletedTechnique.Name;
            }
        }

        #endregion
    }
}
